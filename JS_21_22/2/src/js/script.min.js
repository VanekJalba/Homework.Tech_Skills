
//= partials/_lodash.min.js
;
//= partials/_quiz.data.js
;
document.addEventListener("DOMContentLoaded", ready);
function ready() {

  let testApp = {
    quiz: {}, // сюда записываем базу с вопросами
    userAnswers: {}, // объект с ответами пользователя
    inputsCash: [], // кэшируем отмеченные чекбоксы, чтобы потом их снять
    init() {
      testApp.dataToDOM(testApp.getData()); // получаем базу вопросов и на основе шаблона добавляем в DOM тело теста
    },
    getData() { // забираем данные из localstorage
      // Забираем JSON из хранилища и парсим
      let localGet = localStorage.getItem('quiz');
      let quiz = JSON.parse(localGet);
      testApp.quiz = quiz;
      return(quiz);
    },
    dataToDOM(quiz) { // на основе шаблона формируем тело теста и добавляем в DOM
      let html = document.getElementById('quiz').innerHTML;
      let tmpl = _.template(html);
      let content = tmpl(quiz);
      let wrapper = document.querySelector('.wrapper');
      wrapper.innerHTML = content;
      let button = document.querySelector('.btn-submit');
      button.addEventListener('click', function(e) { // кнопка для обработки теста
        e.preventDefault();
        testApp.getAnswers(); // собираем данные с чекбоксов
      })
    },
    getAnswers() { // собираем отмеченные чекбоксы
      let quizResults = document.querySelectorAll('input[type="checkbox"]:checked');
      testApp.inputsCash = quizResults; // кэшируем их
      if (testApp.checkQuizEnd(quizResults)) { // проверяем сколько вопросов отвечено
        let userAnswers = testApp.recordAnswers(quizResults); // если отвечены все, то формируем объект с ответами пользователя
        testApp.checkResults(userAnswers); // и проверяем их
      } else {
        testApp.modal('warning'); // иначе вызываем модальку с просьбой ответить на все вопросы
      }
    },
    checkQuizEnd(quizResults) { // проверяем сколько вопросов отвечено
      let answersCount = 0;
      let questionsCount = testApp.quiz.data.length;
      let questionName = '';
      let items = Array.prototype.slice.call(quizResults);
      for (let item of items) {
        if (item.name != questionName) {
            answersCount += 1;
            questionName = item.name;
        }
      }
      if (answersCount === questionsCount) {
        return true;
      } else {
        return false;
      }
    },
    recordAnswers(quizResults) { // создаем объект с ответами пользователя
      let userAnswers = [];
      userAnswers.quizName = testApp.quiz.name; // пише название теста
      let questionId;
      let questionText;
      let answerNumber = -1;
      let items = Array.prototype.slice.call(quizResults); // текст ответа берем из атрибутов отмеченных чекбоксов
      for (let item of items) {
        questionText = item.getAttribute('data-text');
        if (item.name !== questionId) {
          questionId = item.name;
          answerNumber += 1;
          userAnswers[answerNumber] = {};
          userAnswers[answerNumber].id = questionId;
          userAnswers[answerNumber].answers = [];
        }
        userAnswers[answerNumber].answers.push(questionText);
      }
      testApp.userAnswers = userAnswers;
      return userAnswers;
    },
    checkResults(userAnswers) { // обрабатываем результаты теста
      userAnswers.maxResult = testApp.quiz.data.length; // 1 вопрос = 1 балл
      userAnswers.quizResult = 0;
      let arr, elem;
      for (var x = 0; x < userAnswers.length; x++) {
          if (userAnswers[x].answers.length === testApp.quiz.data[x].rightAnswer.length) {
              for (var i = 0; i < userAnswers[x].answers.length; i++) {
                  arr = userAnswers[x].answers;
                  elem = testApp.quiz.data[x].rightAnswer[i]; // берем правильный(е) ответ(ы)
                  if (arr.indexOf(elem) < 0) { // и смотрим на соответствие с ответами пользователя
                      userAnswers[x].mark = 0;
                      break;
                  }
                  if (userAnswers[x].mark !== 1) {
                    userAnswers[x].mark = 1;
                    userAnswers.quizResult += 1;
                  }
              }
          } else {
              userAnswers[x].mark = 0;
          }
      }
      testApp.modal('results', userAnswers); // вызываем модальку с результатами теста
    },
    modal(type, data) { // модальное окно. принимает тип окна и объект с результатами
      let modal = document.createElement('div');
      modal.className = 'modal';

      let modalBody = document.createElement('div');
      modalBody.className = 'modal-body';

      if (type === 'warning') { // не все вопросы отвечены
        modalBody.innerHTML = '<p>Вы ответили не на все вопросы. Пожалуйста, закончите тест</p>';
      } else if (type === 'results') {// все вопросы отвечены
        let answersList = document.createElement('div');
        let result = (Math.round((data.quizResult / data.maxResult) * 100) / 100) * 100;
        let html = `<p>Правильных ответов: ${data.quizResult} из  ${data.maxResult}</p>`;
        let mark, answersListRecord, num = 1;
        for (let item of data) {
          if (item.mark === 1) {mark = '1 балл'} else {mark = '0 баллов'};
          answersListRecord = `<p>Вопрос № ${num} - ${mark}</p>`;
          html += answersListRecord;
          num++;
        }
        html += `<p>Ваш итоговый результат: ${result}</p>`;
        answersList.innerHTML = html;
        modalBody.appendChild(answersList);
      }

      let modalHead = document.createElement('div');
      modalHead.className = 'modal-head';
      modalHead.innerHTML = `<span>${testApp.quiz.name}</span><span class="modal-btn-top modal-close">X</span>`;

      let modalFooter = document.createElement('div');
      modalFooter.className = 'modal-footer';
      modalFooter.innerHTML = '<span class="modal-btn-bottom modal-close">Закрыть</span>';

      let modalOverlay = document.createElement('div');
      modalOverlay.className = 'modal__overlay';

      modal.appendChild(modalHead);
      modal.appendChild(modalBody);
      modal.appendChild(modalFooter);

      document.body.appendChild(modalOverlay); // добавляем оверлей
      document.body.appendChild(modal); // добавляем модальку

      function handler(e) { // вешаем обработчик на кнопку и крестик в модальке для закрытия
          e.preventDefault;
          function hasClass(element, cls) {
            return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;
          }
          if (hasClass(e.target, 'modal-close')) {
            document.querySelector('.modal').remove(); // убираем модальку
            document.querySelector('.modal__overlay').remove(); // убираем оверлей
            e.target.removeEventListener('click', handler) // убираем обработчик
            let inputs = testApp.inputsCash; // берем отмеченные инпуты из кеша
            if (testApp.userAnswers.length > 0) { // если тест уже отвечен и обработан, то снимаем чекбоксы
              for (let i=0; i<inputs.length; i++) {
                inputs[i].checked = false;
              }
              testApp.userAnswers = {}; // и обнуляем объект с ответами, чтобы можно было пройти тест еще раз
            }
          }
      }

      document.querySelector('.modal').addEventListener('click', handler); // обработчик на модальном окне, событие делегируется кнопке и крестику
    }
  }

  testApp.init(); // инициализируем тест
}
