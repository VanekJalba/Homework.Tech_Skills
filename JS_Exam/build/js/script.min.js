!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){function n(t){var e=!!t&&"length"in t&&t.length,n=ht.type(t);return"function"===n||ht.isWindow(t)?!1:"array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t}function i(t,e,n){if(ht.isFunction(e))return ht.grep(t,function(t,i){return!!e.call(t,i,t)!==n});if(e.nodeType)return ht.grep(t,function(t){return t===e!==n});if("string"==typeof e){if(Tt.test(e))return ht.filter(e,t,n);e=ht.filter(e,t)}return ht.grep(t,function(t){return ht.inArray(t,e)>-1!==n})}function r(t,e){do t=t[e];while(t&&1!==t.nodeType);return t}function o(t){var e={};return ht.each(t.match(Nt)||[],function(t,n){e[n]=!0}),e}function s(){it.addEventListener?(it.removeEventListener("DOMContentLoaded",a),t.removeEventListener("load",a)):(it.detachEvent("onreadystatechange",a),t.detachEvent("onload",a))}function a(){(it.addEventListener||"load"===t.event.type||"complete"===it.readyState)&&(s(),ht.ready())}function l(t,e,n){if(void 0===n&&1===t.nodeType){var i="data-"+e.replace(qt,"-$1").toLowerCase();if(n=t.getAttribute(i),"string"==typeof n){try{n="true"===n?!0:"false"===n?!1:"null"===n?null:+n+""===n?+n:zt.test(n)?ht.parseJSON(n):n}catch(r){}ht.data(t,e,n)}else n=void 0}return n}function u(t){var e;for(e in t)if(("data"!==e||!ht.isEmptyObject(t[e]))&&"toJSON"!==e)return!1;return!0}function c(t,e,n,i){if(Dt(t)){var r,o,s=ht.expando,a=t.nodeType,l=a?ht.cache:t,u=a?t[s]:t[s]&&s;if(u&&l[u]&&(i||l[u].data)||void 0!==n||"string"!=typeof e)return u||(u=a?t[s]=nt.pop()||ht.guid++:s),l[u]||(l[u]=a?{}:{toJSON:ht.noop}),"object"!=typeof e&&"function"!=typeof e||(i?l[u]=ht.extend(l[u],e):l[u].data=ht.extend(l[u].data,e)),o=l[u],i||(o.data||(o.data={}),o=o.data),void 0!==n&&(o[ht.camelCase(e)]=n),"string"==typeof e?(r=o[e],null==r&&(r=o[ht.camelCase(e)])):r=o,r}}function f(t,e,n){if(Dt(t)){var i,r,o=t.nodeType,s=o?ht.cache:t,a=o?t[ht.expando]:ht.expando;if(s[a]){if(e&&(i=n?s[a]:s[a].data)){ht.isArray(e)?e=e.concat(ht.map(e,ht.camelCase)):e in i?e=[e]:(e=ht.camelCase(e),e=e in i?[e]:e.split(" ")),r=e.length;for(;r--;)delete i[e[r]];if(n?!u(i):!ht.isEmptyObject(i))return}(n||(delete s[a].data,u(s[a])))&&(o?ht.cleanData([t],!0):ft.deleteExpando||s!=s.window?delete s[a]:s[a]=void 0)}}}function d(t,e,n,i){var r,o=1,s=20,a=i?function(){return i.cur()}:function(){return ht.css(t,e,"")},l=a(),u=n&&n[3]||(ht.cssNumber[e]?"":"px"),c=(ht.cssNumber[e]||"px"!==u&&+l)&&It.exec(ht.css(t,e));if(c&&c[3]!==u){u=u||c[3],n=n||[],c=+l||1;do o=o||".5",c/=o,ht.style(t,e,c+u);while(o!==(o=a()/l)&&1!==o&&--s)}return n&&(c=+c||+l||0,r=n[1]?c+(n[1]+1)*n[2]:+n[2],i&&(i.unit=u,i.start=c,i.end=r)),r}function h(t){var e=$t.split("|"),n=t.createDocumentFragment();if(n.createElement)for(;e.length;)n.createElement(e.pop());return n}function p(t,e){var n,i,r=0,o="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):void 0;if(!o)for(o=[],n=t.childNodes||t;null!=(i=n[r]);r++)!e||ht.nodeName(i,e)?o.push(i):ht.merge(o,p(i,e));return void 0===e||e&&ht.nodeName(t,e)?ht.merge([t],o):o}function m(t,e){for(var n,i=0;null!=(n=t[i]);i++)ht._data(n,"globalEval",!e||ht._data(e[i],"globalEval"))}function g(t){Ft.test(t.type)&&(t.defaultChecked=t.checked)}function v(t,e,n,i,r){for(var o,s,a,l,u,c,f,d=t.length,v=h(e),y=[],b=0;d>b;b++)if(s=t[b],s||0===s)if("object"===ht.type(s))ht.merge(y,s.nodeType?[s]:s);else if(Ut.test(s)){for(l=l||v.appendChild(e.createElement("div")),u=(Mt.exec(s)||["",""])[1].toLowerCase(),f=Xt[u]||Xt._default,l.innerHTML=f[1]+ht.htmlPrefilter(s)+f[2],o=f[0];o--;)l=l.lastChild;if(!ft.leadingWhitespace&&Bt.test(s)&&y.push(e.createTextNode(Bt.exec(s)[0])),!ft.tbody)for(s="table"!==u||Vt.test(s)?"<table>"!==f[1]||Vt.test(s)?0:l:l.firstChild,o=s&&s.childNodes.length;o--;)ht.nodeName(c=s.childNodes[o],"tbody")&&!c.childNodes.length&&s.removeChild(c);for(ht.merge(y,l.childNodes),l.textContent="";l.firstChild;)l.removeChild(l.firstChild);l=v.lastChild}else y.push(e.createTextNode(s));for(l&&v.removeChild(l),ft.appendChecked||ht.grep(p(y,"input"),g),b=0;s=y[b++];)if(i&&ht.inArray(s,i)>-1)r&&r.push(s);else if(a=ht.contains(s.ownerDocument,s),l=p(v.appendChild(s),"script"),a&&m(l),n)for(o=0;s=l[o++];)Pt.test(s.type||"")&&n.push(s);return l=null,v}function y(){return!0}function b(){return!1}function x(){try{return it.activeElement}catch(t){}}function _(t,e,n,i,r,o){var s,a;if("object"==typeof e){"string"!=typeof n&&(i=i||n,n=void 0);for(a in e)_(t,a,n,i,e[a],o);return t}if(null==i&&null==r?(r=n,i=n=void 0):null==r&&("string"==typeof n?(r=i,i=void 0):(r=i,i=n,n=void 0)),r===!1)r=b;else if(!r)return t;return 1===o&&(s=r,r=function(t){return ht().off(t),s.apply(this,arguments)},r.guid=s.guid||(s.guid=ht.guid++)),t.each(function(){ht.event.add(this,e,r,i,n)})}function w(t,e){return ht.nodeName(t,"table")&&ht.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t.appendChild(t.ownerDocument.createElement("tbody")):t}function T(t){return t.type=(null!==ht.find.attr(t,"type"))+"/"+t.type,t}function E(t){var e=re.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function C(t,e){if(1===e.nodeType&&ht.hasData(t)){var n,i,r,o=ht._data(t),s=ht._data(e,o),a=o.events;if(a){delete s.handle,s.events={};for(n in a)for(i=0,r=a[n].length;r>i;i++)ht.event.add(e,n,a[n][i])}s.data&&(s.data=ht.extend({},s.data))}}function j(t,e){var n,i,r;if(1===e.nodeType){if(n=e.nodeName.toLowerCase(),!ft.noCloneEvent&&e[ht.expando]){r=ht._data(e);for(i in r.events)ht.removeEvent(e,i,r.handle);e.removeAttribute(ht.expando)}"script"===n&&e.text!==t.text?(T(e).text=t.text,E(e)):"object"===n?(e.parentNode&&(e.outerHTML=t.outerHTML),ft.html5Clone&&t.innerHTML&&!ht.trim(e.innerHTML)&&(e.innerHTML=t.innerHTML)):"input"===n&&Ft.test(t.type)?(e.defaultChecked=e.checked=t.checked,e.value!==t.value&&(e.value=t.value)):"option"===n?e.defaultSelected=e.selected=t.defaultSelected:"input"!==n&&"textarea"!==n||(e.defaultValue=t.defaultValue)}}function S(t,e,n,i){e=ot.apply([],e);var r,o,s,a,l,u,c=0,f=t.length,d=f-1,h=e[0],m=ht.isFunction(h);if(m||f>1&&"string"==typeof h&&!ft.checkClone&&ie.test(h))return t.each(function(r){var o=t.eq(r);m&&(e[0]=h.call(this,r,o.html())),S(o,e,n,i)});if(f&&(u=v(e,t[0].ownerDocument,!1,t,i),r=u.firstChild,1===u.childNodes.length&&(u=r),r||i)){for(a=ht.map(p(u,"script"),T),s=a.length;f>c;c++)o=u,c!==d&&(o=ht.clone(o,!0,!0),s&&ht.merge(a,p(o,"script"))),n.call(t[c],o,c);if(s)for(l=a[a.length-1].ownerDocument,ht.map(a,E),c=0;s>c;c++)o=a[c],Pt.test(o.type||"")&&!ht._data(o,"globalEval")&&ht.contains(l,o)&&(o.src?ht._evalUrl&&ht._evalUrl(o.src):ht.globalEval((o.text||o.textContent||o.innerHTML||"").replace(oe,"")));u=r=null}return t}function k(t,e,n){for(var i,r=e?ht.filter(e,t):t,o=0;null!=(i=r[o]);o++)n||1!==i.nodeType||ht.cleanData(p(i)),i.parentNode&&(n&&ht.contains(i.ownerDocument,i)&&m(p(i,"script")),i.parentNode.removeChild(i));return t}function N(t,e){var n=ht(e.createElement(t)).appendTo(e.body),i=ht.css(n[0],"display");return n.detach(),i}function L(t){var e=it,n=ue[t];return n||(n=N(t,e),"none"!==n&&n||(le=(le||ht("<iframe frameborder='0' width='0' height='0'/>")).appendTo(e.documentElement),e=(le[0].contentWindow||le[0].contentDocument).document,e.write(),e.close(),n=N(t,e),le.detach()),ue[t]=n),n}function A(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function D(t){if(t in Ee)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),n=Te.length;n--;)if(t=Te[n]+e,t in Ee)return t}function z(t,e){for(var n,i,r,o=[],s=0,a=t.length;a>s;s++)i=t[s],i.style&&(o[s]=ht._data(i,"olddisplay"),n=i.style.display,e?(o[s]||"none"!==n||(i.style.display=""),""===i.style.display&&Rt(i)&&(o[s]=ht._data(i,"olddisplay",L(i.nodeName)))):(r=Rt(i),(n&&"none"!==n||!r)&&ht._data(i,"olddisplay",r?n:ht.css(i,"display"))));for(s=0;a>s;s++)i=t[s],i.style&&(e&&"none"!==i.style.display&&""!==i.style.display||(i.style.display=e?o[s]||"":"none"));return t}function q(t,e,n){var i=xe.exec(e);return i?Math.max(0,i[1]-(n||0))+(i[2]||"px"):e}function H(t,e,n,i,r){for(var o=n===(i?"border":"content")?4:"width"===e?1:0,s=0;4>o;o+=2)"margin"===n&&(s+=ht.css(t,n+Ot[o],!0,r)),i?("content"===n&&(s-=ht.css(t,"padding"+Ot[o],!0,r)),"margin"!==n&&(s-=ht.css(t,"border"+Ot[o]+"Width",!0,r))):(s+=ht.css(t,"padding"+Ot[o],!0,r),"padding"!==n&&(s+=ht.css(t,"border"+Ot[o]+"Width",!0,r)));return s}function I(t,e,n){var i=!0,r="width"===e?t.offsetWidth:t.offsetHeight,o=pe(t),s=ft.boxSizing&&"border-box"===ht.css(t,"boxSizing",!1,o);if(0>=r||null==r){if(r=me(t,e,o),(0>r||null==r)&&(r=t.style[e]),fe.test(r))return r;i=s&&(ft.boxSizingReliable()||r===t.style[e]),r=parseFloat(r)||0}return r+H(t,e,n||(s?"border":"content"),i,o)+"px"}function O(t,e,n,i,r){return new O.prototype.init(t,e,n,i,r)}function R(){return t.setTimeout(function(){Ce=void 0}),Ce=ht.now()}function W(t,e){var n,i={height:t},r=0;for(e=e?1:0;4>r;r+=2-e)n=Ot[r],i["margin"+n]=i["padding"+n]=t;return e&&(i.opacity=i.width=t),i}function F(t,e,n){for(var i,r=(B.tweeners[e]||[]).concat(B.tweeners["*"]),o=0,s=r.length;s>o;o++)if(i=r[o].call(n,e,t))return i}function M(t,e,n){var i,r,o,s,a,l,u,c,f=this,d={},h=t.style,p=t.nodeType&&Rt(t),m=ht._data(t,"fxshow");n.queue||(a=ht._queueHooks(t,"fx"),null==a.unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,f.always(function(){f.always(function(){a.unqueued--,ht.queue(t,"fx").length||a.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],u=ht.css(t,"display"),c="none"===u?ht._data(t,"olddisplay")||L(t.nodeName):u,"inline"===c&&"none"===ht.css(t,"float")&&(ft.inlineBlockNeedsLayout&&"inline"!==L(t.nodeName)?h.zoom=1:h.display="inline-block")),n.overflow&&(h.overflow="hidden",ft.shrinkWrapBlocks()||f.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]}));for(i in e)if(r=e[i],Se.exec(r)){if(delete e[i],o=o||"toggle"===r,r===(p?"hide":"show")){if("show"!==r||!m||void 0===m[i])continue;p=!0}d[i]=m&&m[i]||ht.style(t,i)}else u=void 0;if(ht.isEmptyObject(d))"inline"===("none"===u?L(t.nodeName):u)&&(h.display=u);else{m?"hidden"in m&&(p=m.hidden):m=ht._data(t,"fxshow",{}),o&&(m.hidden=!p),p?ht(t).show():f.done(function(){ht(t).hide()}),f.done(function(){var e;ht._removeData(t,"fxshow");for(e in d)ht.style(t,e,d[e])});for(i in d)s=F(p?m[i]:0,i,f),i in m||(m[i]=s.start,p&&(s.end=s.start,s.start="width"===i||"height"===i?1:0))}}function P(t,e){var n,i,r,o,s;for(n in t)if(i=ht.camelCase(n),r=e[i],o=t[n],ht.isArray(o)&&(r=o[1],o=t[n]=o[0]),n!==i&&(t[i]=o,delete t[n]),s=ht.cssHooks[i],s&&"expand"in s){o=s.expand(o),delete t[i];for(n in o)n in t||(t[n]=o[n],e[n]=r)}else e[i]=r}function B(t,e,n){var i,r,o=0,s=B.prefilters.length,a=ht.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=Ce||R(),n=Math.max(0,u.startTime+u.duration-e),i=n/u.duration||0,o=1-i,s=0,l=u.tweens.length;l>s;s++)u.tweens[s].run(o);return a.notifyWith(t,[u,o,n]),1>o&&l?n:(a.resolveWith(t,[u]),!1)},u=a.promise({elem:t,props:ht.extend({},e),opts:ht.extend(!0,{specialEasing:{},easing:ht.easing._default},n),originalProperties:e,originalOptions:n,startTime:Ce||R(),duration:n.duration,tweens:[],createTween:function(e,n){var i=ht.Tween(t,u.opts,e,n,u.opts.specialEasing[e]||u.opts.easing);return u.tweens.push(i),i},stop:function(e){var n=0,i=e?u.tweens.length:0;if(r)return this;for(r=!0;i>n;n++)u.tweens[n].run(1);return e?(a.notifyWith(t,[u,1,0]),a.resolveWith(t,[u,e])):a.rejectWith(t,[u,e]),this}}),c=u.props;for(P(c,u.opts.specialEasing);s>o;o++)if(i=B.prefilters[o].call(u,t,c,u.opts))return ht.isFunction(i.stop)&&(ht._queueHooks(u.elem,u.opts.queue).stop=ht.proxy(i.stop,i)),i;return ht.map(c,F,u),ht.isFunction(u.opts.start)&&u.opts.start.call(t,u),ht.fx.timer(ht.extend(l,{elem:t,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function $(t){return ht.attr(t,"class")||""}function X(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var i,r=0,o=e.toLowerCase().match(Nt)||[];if(ht.isFunction(n))for(;i=o[r++];)"+"===i.charAt(0)?(i=i.slice(1)||"*",(t[i]=t[i]||[]).unshift(n)):(t[i]=t[i]||[]).push(n)}}function U(t,e,n,i){function r(a){var l;return o[a]=!0,ht.each(t[a]||[],function(t,a){var u=a(e,n,i);return"string"!=typeof u||s||o[u]?s?!(l=u):void 0:(e.dataTypes.unshift(u),r(u),!1)}),l}var o={},s=t===Ke;return r(e.dataTypes[0])||!o["*"]&&r("*")}function V(t,e){var n,i,r=ht.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((r[i]?t:n||(n={}))[i]=e[i]);return n&&ht.extend(!0,t,n),t}function Y(t,e,n){for(var i,r,o,s,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===r&&(r=t.mimeType||e.getResponseHeader("Content-Type"));if(r)for(s in a)if(a[s]&&a[s].test(r)){l.unshift(s);break}if(l[0]in n)o=l[0];else{for(s in n){if(!l[0]||t.converters[s+" "+l[0]]){o=s;break}i||(i=s)}o=o||i}return o?(o!==l[0]&&l.unshift(o),n[o]):void 0}function Q(t,e,n,i){var r,o,s,a,l,u={},c=t.dataTypes.slice();if(c[1])for(s in t.converters)u[s.toLowerCase()]=t.converters[s];for(o=c.shift();o;)if(t.responseFields[o]&&(n[t.responseFields[o]]=e),!l&&i&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(s=u[l+" "+o]||u["* "+o],!s)for(r in u)if(a=r.split(" "),a[1]===o&&(s=u[l+" "+a[0]]||u["* "+a[0]])){s===!0?s=u[r]:u[r]!==!0&&(o=a[0],c.unshift(a[1]));break}if(s!==!0)if(s&&t["throws"])e=s(e);else try{e=s(e)}catch(f){return{state:"parsererror",error:s?f:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}function G(t){return t.style&&t.style.display||ht.css(t,"display")}function J(t){if(!ht.contains(t.ownerDocument||it,t))return!0;for(;t&&1===t.nodeType;){if("none"===G(t)||"hidden"===t.type)return!0;t=t.parentNode}return!1}function K(t,e,n,i){var r;if(ht.isArray(e))ht.each(e,function(e,r){n||rn.test(t)?i(t,r):K(t+"["+("object"==typeof r&&null!=r?e:"")+"]",r,n,i)});else if(n||"object"!==ht.type(e))i(t,e);else for(r in e)K(t+"["+r+"]",e[r],n,i)}function Z(){try{return new t.XMLHttpRequest}catch(e){}}function tt(){try{return new t.ActiveXObject("Microsoft.XMLHTTP")}catch(e){}}function et(t){return ht.isWindow(t)?t:9===t.nodeType?t.defaultView||t.parentWindow:!1}var nt=[],it=t.document,rt=nt.slice,ot=nt.concat,st=nt.push,at=nt.indexOf,lt={},ut=lt.toString,ct=lt.hasOwnProperty,ft={},dt="1.12.4",ht=function(t,e){return new ht.fn.init(t,e)},pt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,mt=/^-ms-/,gt=/-([\da-z])/gi,vt=function(t,e){return e.toUpperCase()};ht.fn=ht.prototype={jquery:dt,constructor:ht,selector:"",length:0,toArray:function(){return rt.call(this)},get:function(t){return null!=t?0>t?this[t+this.length]:this[t]:rt.call(this)},pushStack:function(t){var e=ht.merge(this.constructor(),t);return e.prevObject=this,e.context=this.context,e},each:function(t){return ht.each(this,t)},map:function(t){return this.pushStack(ht.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return this.pushStack(rt.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,n=+t+(0>t?e:0);return this.pushStack(n>=0&&e>n?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:st,sort:nt.sort,splice:nt.splice},ht.extend=ht.fn.extend=function(){var t,e,n,i,r,o,s=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof s&&(u=s,s=arguments[a]||{},a++),"object"==typeof s||ht.isFunction(s)||(s={}),a===l&&(s=this,a--);l>a;a++)if(null!=(r=arguments[a]))for(i in r)t=s[i],n=r[i],s!==n&&(u&&n&&(ht.isPlainObject(n)||(e=ht.isArray(n)))?(e?(e=!1,o=t&&ht.isArray(t)?t:[]):o=t&&ht.isPlainObject(t)?t:{},s[i]=ht.extend(u,o,n)):void 0!==n&&(s[i]=n));return s},ht.extend({expando:"jQuery"+(dt+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===ht.type(t)},isArray:Array.isArray||function(t){return"array"===ht.type(t)},isWindow:function(t){return null!=t&&t==t.window},isNumeric:function(t){var e=t&&t.toString();return!ht.isArray(t)&&e-parseFloat(e)+1>=0},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},isPlainObject:function(t){var e;if(!t||"object"!==ht.type(t)||t.nodeType||ht.isWindow(t))return!1;try{if(t.constructor&&!ct.call(t,"constructor")&&!ct.call(t.constructor.prototype,"isPrototypeOf"))return!1}catch(n){return!1}if(!ft.ownFirst)for(e in t)return ct.call(t,e);for(e in t);return void 0===e||ct.call(t,e)},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?lt[ut.call(t)]||"object":typeof t},globalEval:function(e){e&&ht.trim(e)&&(t.execScript||function(e){t.eval.call(t,e)})(e)},camelCase:function(t){return t.replace(mt,"ms-").replace(gt,vt)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var i,r=0;if(n(t))for(i=t.length;i>r&&e.call(t[r],r,t[r])!==!1;r++);else for(r in t)if(e.call(t[r],r,t[r])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(pt,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(n(Object(t))?ht.merge(i,"string"==typeof t?[t]:t):st.call(i,t)),i},inArray:function(t,e,n){var i;if(e){if(at)return at.call(e,t,n);for(i=e.length,n=n?0>n?Math.max(0,i+n):n:0;i>n;n++)if(n in e&&e[n]===t)return n}return-1},merge:function(t,e){for(var n=+e.length,i=0,r=t.length;n>i;)t[r++]=e[i++];if(n!==n)for(;void 0!==e[i];)t[r++]=e[i++];return t.length=r,t},grep:function(t,e,n){for(var i,r=[],o=0,s=t.length,a=!n;s>o;o++)i=!e(t[o],o),i!==a&&r.push(t[o]);return r},map:function(t,e,i){var r,o,s=0,a=[];if(n(t))for(r=t.length;r>s;s++)o=e(t[s],s,i),null!=o&&a.push(o);else for(s in t)o=e(t[s],s,i),null!=o&&a.push(o);return ot.apply([],a)},guid:1,proxy:function(t,e){var n,i,r;return"string"==typeof e&&(r=t[e],e=t,t=r),ht.isFunction(t)?(n=rt.call(arguments,2),i=function(){return t.apply(e||this,n.concat(rt.call(arguments)))},i.guid=t.guid=t.guid||ht.guid++,i):void 0},now:function(){return+new Date},support:ft}),"function"==typeof Symbol&&(ht.fn[Symbol.iterator]=nt[Symbol.iterator]),ht.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){lt["[object "+e+"]"]=e.toLowerCase()});var yt=function(t){function e(t,e,n,i){var r,o,s,a,l,u,f,h,p=e&&e.ownerDocument,m=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==m&&9!==m&&11!==m)return n;if(!i&&((e?e.ownerDocument||e:F)!==D&&A(e),e=e||D,q)){if(11!==m&&(u=vt.exec(t)))if(r=u[1]){if(9===m){if(!(s=e.getElementById(r)))return n;if(s.id===r)return n.push(s),n}else if(p&&(s=p.getElementById(r))&&R(e,s)&&s.id===r)return n.push(s),n}else{if(u[2])return K.apply(n,e.getElementsByTagName(t)),n;if((r=u[3])&&_.getElementsByClassName&&e.getElementsByClassName)return K.apply(n,e.getElementsByClassName(r)),n}if(_.qsa&&!X[t+" "]&&(!H||!H.test(t))){if(1!==m)p=e,h=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(bt,"\\$&"):e.setAttribute("id",a=W),f=C(t),o=f.length,l=dt.test(a)?"#"+a:"[id='"+a+"']";o--;)f[o]=l+" "+d(f[o]);h=f.join(","),p=yt.test(t)&&c(e.parentNode)||e}if(h)try{return K.apply(n,p.querySelectorAll(h)),n}catch(g){}finally{a===W&&e.removeAttribute("id")}}}return S(t.replace(at,"$1"),e,n,i)}function n(){function t(n,i){return e.push(n+" ")>w.cacheLength&&delete t[e.shift()],t[n+" "]=i}var e=[];return t}function i(t){return t[W]=!0,t}function r(t){var e=D.createElement("div");try{return!!t(e)}catch(n){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function o(t,e){for(var n=t.split("|"),i=n.length;i--;)w.attrHandle[n[i]]=e}function s(t,e){var n=e&&t,i=n&&1===t.nodeType&&1===e.nodeType&&(~e.sourceIndex||V)-(~t.sourceIndex||V);if(i)return i;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function a(t){return function(e){var n=e.nodeName.toLowerCase();return"input"===n&&e.type===t}}function l(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}function u(t){return i(function(e){return e=+e,i(function(n,i){for(var r,o=t([],n.length,e),s=o.length;s--;)n[r=o[s]]&&(n[r]=!(i[r]=n[r]))})})}function c(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function f(){}function d(t){for(var e=0,n=t.length,i="";n>e;e++)i+=t[e].value;return i}function h(t,e,n){var i=e.dir,r=n&&"parentNode"===i,o=P++;return e.first?function(e,n,o){for(;e=e[i];)if(1===e.nodeType||r)return t(e,n,o)}:function(e,n,s){var a,l,u,c=[M,o];if(s){for(;e=e[i];)if((1===e.nodeType||r)&&t(e,n,s))return!0}else for(;e=e[i];)if(1===e.nodeType||r){if(u=e[W]||(e[W]={}),l=u[e.uniqueID]||(u[e.uniqueID]={}),(a=l[i])&&a[0]===M&&a[1]===o)return c[2]=a[2];if(l[i]=c,c[2]=t(e,n,s))return!0}}}function p(t){return t.length>1?function(e,n,i){for(var r=t.length;r--;)if(!t[r](e,n,i))return!1;return!0}:t[0]}function m(t,n,i){for(var r=0,o=n.length;o>r;r++)e(t,n[r],i);return i}function g(t,e,n,i,r){for(var o,s=[],a=0,l=t.length,u=null!=e;l>a;a++)(o=t[a])&&(n&&!n(o,i,r)||(s.push(o),u&&e.push(a)));return s}function v(t,e,n,r,o,s){return r&&!r[W]&&(r=v(r)),o&&!o[W]&&(o=v(o,s)),i(function(i,s,a,l){var u,c,f,d=[],h=[],p=s.length,v=i||m(e||"*",a.nodeType?[a]:a,[]),y=!t||!i&&e?v:g(v,d,t,a,l),b=n?o||(i?t:p||r)?[]:s:y;if(n&&n(y,b,a,l),r)for(u=g(b,h),r(u,[],a,l),c=u.length;c--;)(f=u[c])&&(b[h[c]]=!(y[h[c]]=f));if(i){if(o||t){if(o){for(u=[],c=b.length;c--;)(f=b[c])&&u.push(y[c]=f);o(null,b=[],u,l)}for(c=b.length;c--;)(f=b[c])&&(u=o?tt(i,f):d[c])>-1&&(i[u]=!(s[u]=f))}}else b=g(b===s?b.splice(p,b.length):b),o?o(null,s,b,l):K.apply(s,b)})}function y(t){for(var e,n,i,r=t.length,o=w.relative[t[0].type],s=o||w.relative[" "],a=o?1:0,l=h(function(t){return t===e},s,!0),u=h(function(t){return tt(e,t)>-1},s,!0),c=[function(t,n,i){var r=!o&&(i||n!==k)||((e=n).nodeType?l(t,n,i):u(t,n,i));return e=null,r}];r>a;a++)if(n=w.relative[t[a].type])c=[h(p(c),n)];else{if(n=w.filter[t[a].type].apply(null,t[a].matches),n[W]){for(i=++a;r>i&&!w.relative[t[i].type];i++);return v(a>1&&p(c),a>1&&d(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(at,"$1"),n,i>a&&y(t.slice(a,i)),r>i&&y(t=t.slice(i)),r>i&&d(t))}c.push(n)}return p(c)}function b(t,n){var r=n.length>0,o=t.length>0,s=function(i,s,a,l,u){var c,f,d,h=0,p="0",m=i&&[],v=[],y=k,b=i||o&&w.find.TAG("*",u),x=M+=null==y?1:Math.random()||.1,_=b.length;for(u&&(k=s===D||s||u);p!==_&&null!=(c=b[p]);p++){if(o&&c){for(f=0,s||c.ownerDocument===D||(A(c),a=!q);d=t[f++];)if(d(c,s||D,a)){l.push(c);break}u&&(M=x)}r&&((c=!d&&c)&&h--,i&&m.push(c))}if(h+=p,r&&p!==h){for(f=0;d=n[f++];)d(m,v,s,a);if(i){if(h>0)for(;p--;)m[p]||v[p]||(v[p]=G.call(l));v=g(v)}K.apply(l,v),u&&!i&&v.length>0&&h+n.length>1&&e.uniqueSort(l)}return u&&(M=x,k=y),m};return r?i(s):s}var x,_,w,T,E,C,j,S,k,N,L,A,D,z,q,H,I,O,R,W="sizzle"+1*new Date,F=t.document,M=0,P=0,B=n(),$=n(),X=n(),U=function(t,e){return t===e&&(L=!0),0},V=1<<31,Y={}.hasOwnProperty,Q=[],G=Q.pop,J=Q.push,K=Q.push,Z=Q.slice,tt=function(t,e){for(var n=0,i=t.length;i>n;n++)if(t[n]===e)return n;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",nt="[\\x20\\t\\r\\n\\f]",it="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",rt="\\["+nt+"*("+it+")(?:"+nt+"*([*^$|!~]?=)"+nt+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+it+"))|)"+nt+"*\\]",ot=":("+it+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+rt+")*)|.*)\\)|)",st=new RegExp(nt+"+","g"),at=new RegExp("^"+nt+"+|((?:^|[^\\\\])(?:\\\\.)*)"+nt+"+$","g"),lt=new RegExp("^"+nt+"*,"+nt+"*"),ut=new RegExp("^"+nt+"*([>+~]|"+nt+")"+nt+"*"),ct=new RegExp("="+nt+"*([^\\]'\"]*?)"+nt+"*\\]","g"),ft=new RegExp(ot),dt=new RegExp("^"+it+"$"),ht={ID:new RegExp("^#("+it+")"),CLASS:new RegExp("^\\.("+it+")"),TAG:new RegExp("^("+it+"|[*])"),ATTR:new RegExp("^"+rt),PSEUDO:new RegExp("^"+ot),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+nt+"*(even|odd|(([+-]|)(\\d*)n|)"+nt+"*(?:([+-]|)"+nt+"*(\\d+)|))"+nt+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+nt+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+nt+"*((?:-\\d)?\\d*)"+nt+"*\\)|)(?=[^-]|$)","i")},pt=/^(?:input|select|textarea|button)$/i,mt=/^h\d$/i,gt=/^[^{]+\{\s*\[native \w/,vt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,yt=/[+~]/,bt=/'|\\/g,xt=new RegExp("\\\\([\\da-f]{1,6}"+nt+"?|("+nt+")|.)","ig"),_t=function(t,e,n){var i="0x"+e-65536;return i!==i||n?e:0>i?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},wt=function(){A()};try{K.apply(Q=Z.call(F.childNodes),F.childNodes),Q[F.childNodes.length].nodeType}catch(Tt){K={apply:Q.length?function(t,e){J.apply(t,Z.call(e))}:function(t,e){for(var n=t.length,i=0;t[n++]=e[i++];);t.length=n-1}}}_=e.support={},E=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return e?"HTML"!==e.nodeName:!1},A=e.setDocument=function(t){var e,n,i=t?t.ownerDocument||t:F;return i!==D&&9===i.nodeType&&i.documentElement?(D=i,z=D.documentElement,q=!E(D),(n=D.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",wt,!1):n.attachEvent&&n.attachEvent("onunload",wt)),_.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),_.getElementsByTagName=r(function(t){return t.appendChild(D.createComment("")),!t.getElementsByTagName("*").length}),_.getElementsByClassName=gt.test(D.getElementsByClassName),_.getById=r(function(t){return z.appendChild(t).id=W,!D.getElementsByName||!D.getElementsByName(W).length}),_.getById?(w.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&q){var n=e.getElementById(t);return n?[n]:[]}},w.filter.ID=function(t){var e=t.replace(xt,_t);return function(t){return t.getAttribute("id")===e}}):(delete w.find.ID,w.filter.ID=function(t){var e=t.replace(xt,_t);return function(t){var n="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}}),w.find.TAG=_.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):_.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,i=[],r=0,o=e.getElementsByTagName(t);if("*"===t){for(;n=o[r++];)1===n.nodeType&&i.push(n);return i}return o},w.find.CLASS=_.getElementsByClassName&&function(t,e){return"undefined"!=typeof e.getElementsByClassName&&q?e.getElementsByClassName(t):void 0},I=[],H=[],(_.qsa=gt.test(D.querySelectorAll))&&(r(function(t){z.appendChild(t).innerHTML="<a id='"+W+"'></a><select id='"+W+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&H.push("[*^$]="+nt+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||H.push("\\["+nt+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+W+"-]").length||H.push("~="),t.querySelectorAll(":checked").length||H.push(":checked"),t.querySelectorAll("a#"+W+"+*").length||H.push(".#.+[+~]")}),r(function(t){var e=D.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&H.push("name"+nt+"*[*^$|!~]?="),t.querySelectorAll(":enabled").length||H.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),H.push(",.*:")})),(_.matchesSelector=gt.test(O=z.matches||z.webkitMatchesSelector||z.mozMatchesSelector||z.oMatchesSelector||z.msMatchesSelector))&&r(function(t){_.disconnectedMatch=O.call(t,"div"),O.call(t,"[s!='']:x"),I.push("!=",ot)}),H=H.length&&new RegExp(H.join("|")),I=I.length&&new RegExp(I.join("|")),e=gt.test(z.compareDocumentPosition),R=e||gt.test(z.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,i=e&&e.parentNode;return t===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):t.compareDocumentPosition&&16&t.compareDocumentPosition(i)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},U=e?function(t,e){if(t===e)return L=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n?n:(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&n||!_.sortDetached&&e.compareDocumentPosition(t)===n?t===D||t.ownerDocument===F&&R(F,t)?-1:e===D||e.ownerDocument===F&&R(F,e)?1:N?tt(N,t)-tt(N,e):0:4&n?-1:1)}:function(t,e){if(t===e)return L=!0,0;var n,i=0,r=t.parentNode,o=e.parentNode,a=[t],l=[e];if(!r||!o)return t===D?-1:e===D?1:r?-1:o?1:N?tt(N,t)-tt(N,e):0;if(r===o)return s(t,e);for(n=t;n=n.parentNode;)a.unshift(n);for(n=e;n=n.parentNode;)l.unshift(n);for(;a[i]===l[i];)i++;return i?s(a[i],l[i]):a[i]===F?-1:l[i]===F?1:0},D):D},e.matches=function(t,n){return e(t,null,null,n)},e.matchesSelector=function(t,n){if((t.ownerDocument||t)!==D&&A(t),n=n.replace(ct,"='$1']"),_.matchesSelector&&q&&!X[n+" "]&&(!I||!I.test(n))&&(!H||!H.test(n)))try{var i=O.call(t,n);if(i||_.disconnectedMatch||t.document&&11!==t.document.nodeType)return i}catch(r){}return e(n,D,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==D&&A(t),R(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==D&&A(t);var n=w.attrHandle[e.toLowerCase()],i=n&&Y.call(w.attrHandle,e.toLowerCase())?n(t,e,!q):void 0;return void 0!==i?i:_.attributes||!q?t.getAttribute(e):(i=t.getAttributeNode(e))&&i.specified?i.value:null},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,n=[],i=0,r=0;if(L=!_.detectDuplicates,N=!_.sortStable&&t.slice(0),t.sort(U),L){for(;e=t[r++];)e===t[r]&&(i=n.push(r));for(;i--;)t.splice(n[i],1)}return N=null,t},T=e.getText=function(t){var e,n="",i=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=T(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[i++];)n+=T(e);return n},w=e.selectors={cacheLength:50,createPseudo:i,match:ht,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(xt,_t),t[3]=(t[3]||t[4]||t[5]||"").replace(xt,_t),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return ht.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&ft.test(n)&&(e=C(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(xt,_t).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=B[t+" "];return e||(e=new RegExp("(^|"+nt+")"+t+"("+nt+"|$)"))&&B(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,n,i){return function(r){var o=e.attr(r,t);return null==o?"!="===n:n?(o+="","="===n?o===i:"!="===n?o!==i:"^="===n?i&&0===o.indexOf(i):"*="===n?i&&o.indexOf(i)>-1:"$="===n?i&&o.slice(-i.length)===i:"~="===n?(" "+o.replace(st," ")+" ").indexOf(i)>-1:"|="===n?o===i||o.slice(0,i.length+1)===i+"-":!1):!0}},CHILD:function(t,e,n,i,r){var o="nth"!==t.slice(0,3),s="last"!==t.slice(-4),a="of-type"===e;return 1===i&&0===r?function(t){return!!t.parentNode}:function(e,n,l){var u,c,f,d,h,p,m=o!==s?"nextSibling":"previousSibling",g=e.parentNode,v=a&&e.nodeName.toLowerCase(),y=!l&&!a,b=!1;if(g){if(o){for(;m;){for(d=e;d=d[m];)if(a?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;p=m="only"===t&&!p&&"nextSibling"}return!0}if(p=[s?g.firstChild:g.lastChild],s&&y){for(d=g,f=d[W]||(d[W]={}),c=f[d.uniqueID]||(f[d.uniqueID]={}),u=c[t]||[],h=u[0]===M&&u[1],
b=h&&u[2],d=h&&g.childNodes[h];d=++h&&d&&d[m]||(b=h=0)||p.pop();)if(1===d.nodeType&&++b&&d===e){c[t]=[M,h,b];break}}else if(y&&(d=e,f=d[W]||(d[W]={}),c=f[d.uniqueID]||(f[d.uniqueID]={}),u=c[t]||[],h=u[0]===M&&u[1],b=h),b===!1)for(;(d=++h&&d&&d[m]||(b=h=0)||p.pop())&&((a?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++b||(y&&(f=d[W]||(d[W]={}),c=f[d.uniqueID]||(f[d.uniqueID]={}),c[t]=[M,b]),d!==e)););return b-=r,b===i||b%i===0&&b/i>=0}}},PSEUDO:function(t,n){var r,o=w.pseudos[t]||w.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return o[W]?o(n):o.length>1?(r=[t,t,"",n],w.setFilters.hasOwnProperty(t.toLowerCase())?i(function(t,e){for(var i,r=o(t,n),s=r.length;s--;)i=tt(t,r[s]),t[i]=!(e[i]=r[s])}):function(t){return o(t,0,r)}):o}},pseudos:{not:i(function(t){var e=[],n=[],r=j(t.replace(at,"$1"));return r[W]?i(function(t,e,n,i){for(var o,s=r(t,null,i,[]),a=t.length;a--;)(o=s[a])&&(t[a]=!(e[a]=o))}):function(t,i,o){return e[0]=t,r(e,null,o,n),e[0]=null,!n.pop()}}),has:i(function(t){return function(n){return e(t,n).length>0}}),contains:i(function(t){return t=t.replace(xt,_t),function(e){return(e.textContent||e.innerText||T(e)).indexOf(t)>-1}}),lang:i(function(t){return dt.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(xt,_t).toLowerCase(),function(e){var n;do if(n=q?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return n=n.toLowerCase(),n===t||0===n.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===z},focus:function(t){return t===D.activeElement&&(!D.hasFocus||D.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:function(t){return t.disabled===!1},disabled:function(t){return t.disabled===!0},checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!w.pseudos.empty(t)},header:function(t){return mt.test(t.nodeName)},input:function(t){return pt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:u(function(){return[0]}),last:u(function(t,e){return[e-1]}),eq:u(function(t,e,n){return[0>n?n+e:n]}),even:u(function(t,e){for(var n=0;e>n;n+=2)t.push(n);return t}),odd:u(function(t,e){for(var n=1;e>n;n+=2)t.push(n);return t}),lt:u(function(t,e,n){for(var i=0>n?n+e:n;--i>=0;)t.push(i);return t}),gt:u(function(t,e,n){for(var i=0>n?n+e:n;++i<e;)t.push(i);return t})}},w.pseudos.nth=w.pseudos.eq;for(x in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[x]=a(x);for(x in{submit:!0,reset:!0})w.pseudos[x]=l(x);return f.prototype=w.filters=w.pseudos,w.setFilters=new f,C=e.tokenize=function(t,n){var i,r,o,s,a,l,u,c=$[t+" "];if(c)return n?0:c.slice(0);for(a=t,l=[],u=w.preFilter;a;){i&&!(r=lt.exec(a))||(r&&(a=a.slice(r[0].length)||a),l.push(o=[])),i=!1,(r=ut.exec(a))&&(i=r.shift(),o.push({value:i,type:r[0].replace(at," ")}),a=a.slice(i.length));for(s in w.filter)!(r=ht[s].exec(a))||u[s]&&!(r=u[s](r))||(i=r.shift(),o.push({value:i,type:s,matches:r}),a=a.slice(i.length));if(!i)break}return n?a.length:a?e.error(t):$(t,l).slice(0)},j=e.compile=function(t,e){var n,i=[],r=[],o=X[t+" "];if(!o){for(e||(e=C(t)),n=e.length;n--;)o=y(e[n]),o[W]?i.push(o):r.push(o);o=X(t,b(r,i)),o.selector=t}return o},S=e.select=function(t,e,n,i){var r,o,s,a,l,u="function"==typeof t&&t,f=!i&&C(t=u.selector||t);if(n=n||[],1===f.length){if(o=f[0]=f[0].slice(0),o.length>2&&"ID"===(s=o[0]).type&&_.getById&&9===e.nodeType&&q&&w.relative[o[1].type]){if(e=(w.find.ID(s.matches[0].replace(xt,_t),e)||[])[0],!e)return n;u&&(e=e.parentNode),t=t.slice(o.shift().value.length)}for(r=ht.needsContext.test(t)?0:o.length;r--&&(s=o[r],!w.relative[a=s.type]);)if((l=w.find[a])&&(i=l(s.matches[0].replace(xt,_t),yt.test(o[0].type)&&c(e.parentNode)||e))){if(o.splice(r,1),t=i.length&&d(o),!t)return K.apply(n,i),n;break}}return(u||j(t,f))(i,e,!q,n,!e||yt.test(t)&&c(e.parentNode)||e),n},_.sortStable=W.split("").sort(U).join("")===W,_.detectDuplicates=!!L,A(),_.sortDetached=r(function(t){return 1&t.compareDocumentPosition(D.createElement("div"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||o("type|href|height|width",function(t,e,n){return n?void 0:t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),_.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||o("value",function(t,e,n){return n||"input"!==t.nodeName.toLowerCase()?void 0:t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||o(et,function(t,e,n){var i;return n?void 0:t[e]===!0?e.toLowerCase():(i=t.getAttributeNode(e))&&i.specified?i.value:null}),e}(t);ht.find=yt,ht.expr=yt.selectors,ht.expr[":"]=ht.expr.pseudos,ht.uniqueSort=ht.unique=yt.uniqueSort,ht.text=yt.getText,ht.isXMLDoc=yt.isXML,ht.contains=yt.contains;var bt=function(t,e,n){for(var i=[],r=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&ht(t).is(n))break;i.push(t)}return i},xt=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},_t=ht.expr.match.needsContext,wt=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Tt=/^.[^:#\[\.,]*$/;ht.filter=function(t,e,n){var i=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===i.nodeType?ht.find.matchesSelector(i,t)?[i]:[]:ht.find.matches(t,ht.grep(e,function(t){return 1===t.nodeType}))},ht.fn.extend({find:function(t){var e,n=[],i=this,r=i.length;if("string"!=typeof t)return this.pushStack(ht(t).filter(function(){for(e=0;r>e;e++)if(ht.contains(i[e],this))return!0}));for(e=0;r>e;e++)ht.find(t,i[e],n);return n=this.pushStack(r>1?ht.unique(n):n),n.selector=this.selector?this.selector+" "+t:t,n},filter:function(t){return this.pushStack(i(this,t||[],!1))},not:function(t){return this.pushStack(i(this,t||[],!0))},is:function(t){return!!i(this,"string"==typeof t&&_t.test(t)?ht(t):t||[],!1).length}});var Et,Ct=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,jt=ht.fn.init=function(t,e,n){var i,r;if(!t)return this;if(n=n||Et,"string"==typeof t){if(i="<"===t.charAt(0)&&">"===t.charAt(t.length-1)&&t.length>=3?[null,t,null]:Ct.exec(t),!i||!i[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(i[1]){if(e=e instanceof ht?e[0]:e,ht.merge(this,ht.parseHTML(i[1],e&&e.nodeType?e.ownerDocument||e:it,!0)),wt.test(i[1])&&ht.isPlainObject(e))for(i in e)ht.isFunction(this[i])?this[i](e[i]):this.attr(i,e[i]);return this}if(r=it.getElementById(i[2]),r&&r.parentNode){if(r.id!==i[2])return Et.find(t);this.length=1,this[0]=r}return this.context=it,this.selector=t,this}return t.nodeType?(this.context=this[0]=t,this.length=1,this):ht.isFunction(t)?"undefined"!=typeof n.ready?n.ready(t):t(ht):(void 0!==t.selector&&(this.selector=t.selector,this.context=t.context),ht.makeArray(t,this))};jt.prototype=ht.fn,Et=ht(it);var St=/^(?:parents|prev(?:Until|All))/,kt={children:!0,contents:!0,next:!0,prev:!0};ht.fn.extend({has:function(t){var e,n=ht(t,this),i=n.length;return this.filter(function(){for(e=0;i>e;e++)if(ht.contains(this,n[e]))return!0})},closest:function(t,e){for(var n,i=0,r=this.length,o=[],s=_t.test(t)||"string"!=typeof t?ht(t,e||this.context):0;r>i;i++)for(n=this[i];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(s?s.index(n)>-1:1===n.nodeType&&ht.find.matchesSelector(n,t))){o.push(n);break}return this.pushStack(o.length>1?ht.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?ht.inArray(this[0],ht(t)):ht.inArray(t.jquery?t[0]:t,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(ht.uniqueSort(ht.merge(this.get(),ht(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),ht.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return bt(t,"parentNode")},parentsUntil:function(t,e,n){return bt(t,"parentNode",n)},next:function(t){return r(t,"nextSibling")},prev:function(t){return r(t,"previousSibling")},nextAll:function(t){return bt(t,"nextSibling")},prevAll:function(t){return bt(t,"previousSibling")},nextUntil:function(t,e,n){return bt(t,"nextSibling",n)},prevUntil:function(t,e,n){return bt(t,"previousSibling",n)},siblings:function(t){return xt((t.parentNode||{}).firstChild,t)},children:function(t){return xt(t.firstChild)},contents:function(t){return ht.nodeName(t,"iframe")?t.contentDocument||t.contentWindow.document:ht.merge([],t.childNodes)}},function(t,e){ht.fn[t]=function(n,i){var r=ht.map(this,e,n);return"Until"!==t.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=ht.filter(i,r)),this.length>1&&(kt[t]||(r=ht.uniqueSort(r)),St.test(t)&&(r=r.reverse())),this.pushStack(r)}});var Nt=/\S+/g;ht.Callbacks=function(t){t="string"==typeof t?o(t):ht.extend({},t);var e,n,i,r,s=[],a=[],l=-1,u=function(){for(r=t.once,i=e=!0;a.length;l=-1)for(n=a.shift();++l<s.length;)s[l].apply(n[0],n[1])===!1&&t.stopOnFalse&&(l=s.length,n=!1);t.memory||(n=!1),e=!1,r&&(s=n?[]:"")},c={add:function(){return s&&(n&&!e&&(l=s.length-1,a.push(n)),function i(e){ht.each(e,function(e,n){ht.isFunction(n)?t.unique&&c.has(n)||s.push(n):n&&n.length&&"string"!==ht.type(n)&&i(n)})}(arguments),n&&!e&&u()),this},remove:function(){return ht.each(arguments,function(t,e){for(var n;(n=ht.inArray(e,s,n))>-1;)s.splice(n,1),l>=n&&l--}),this},has:function(t){return t?ht.inArray(t,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return r=a=[],s=n="",this},disabled:function(){return!s},lock:function(){return r=!0,n||c.disable(),this},locked:function(){return!!r},fireWith:function(t,n){return r||(n=n||[],n=[t,n.slice?n.slice():n],a.push(n),e||u()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!i}};return c},ht.extend({Deferred:function(t){var e=[["resolve","done",ht.Callbacks("once memory"),"resolved"],["reject","fail",ht.Callbacks("once memory"),"rejected"],["notify","progress",ht.Callbacks("memory")]],n="pending",i={state:function(){return n},always:function(){return r.done(arguments).fail(arguments),this},then:function(){var t=arguments;return ht.Deferred(function(n){ht.each(e,function(e,o){var s=ht.isFunction(t[e])&&t[e];r[o[1]](function(){var t=s&&s.apply(this,arguments);t&&ht.isFunction(t.promise)?t.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[o[0]+"With"](this===i?n.promise():this,s?[t]:arguments)})}),t=null}).promise()},promise:function(t){return null!=t?ht.extend(t,i):i}},r={};return i.pipe=i.then,ht.each(e,function(t,o){var s=o[2],a=o[3];i[o[1]]=s.add,a&&s.add(function(){n=a},e[1^t][2].disable,e[2][2].lock),r[o[0]]=function(){return r[o[0]+"With"](this===r?i:this,arguments),this},r[o[0]+"With"]=s.fireWith}),i.promise(r),t&&t.call(r,r),r},when:function(t){var e,n,i,r=0,o=rt.call(arguments),s=o.length,a=1!==s||t&&ht.isFunction(t.promise)?s:0,l=1===a?t:ht.Deferred(),u=function(t,n,i){return function(r){n[t]=this,i[t]=arguments.length>1?rt.call(arguments):r,i===e?l.notifyWith(n,i):--a||l.resolveWith(n,i)}};if(s>1)for(e=new Array(s),n=new Array(s),i=new Array(s);s>r;r++)o[r]&&ht.isFunction(o[r].promise)?o[r].promise().progress(u(r,n,e)).done(u(r,i,o)).fail(l.reject):--a;return a||l.resolveWith(i,o),l.promise()}});var Lt;ht.fn.ready=function(t){return ht.ready.promise().done(t),this},ht.extend({isReady:!1,readyWait:1,holdReady:function(t){t?ht.readyWait++:ht.ready(!0)},ready:function(t){(t===!0?--ht.readyWait:ht.isReady)||(ht.isReady=!0,t!==!0&&--ht.readyWait>0||(Lt.resolveWith(it,[ht]),ht.fn.triggerHandler&&(ht(it).triggerHandler("ready"),ht(it).off("ready"))))}}),ht.ready.promise=function(e){if(!Lt)if(Lt=ht.Deferred(),"complete"===it.readyState||"loading"!==it.readyState&&!it.documentElement.doScroll)t.setTimeout(ht.ready);else if(it.addEventListener)it.addEventListener("DOMContentLoaded",a),t.addEventListener("load",a);else{it.attachEvent("onreadystatechange",a),t.attachEvent("onload",a);var n=!1;try{n=null==t.frameElement&&it.documentElement}catch(i){}n&&n.doScroll&&!function r(){if(!ht.isReady){try{n.doScroll("left")}catch(e){return t.setTimeout(r,50)}s(),ht.ready()}}()}return Lt.promise(e)},ht.ready.promise();var At;for(At in ht(ft))break;ft.ownFirst="0"===At,ft.inlineBlockNeedsLayout=!1,ht(function(){var t,e,n,i;n=it.getElementsByTagName("body")[0],n&&n.style&&(e=it.createElement("div"),i=it.createElement("div"),i.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",n.appendChild(i).appendChild(e),"undefined"!=typeof e.style.zoom&&(e.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",ft.inlineBlockNeedsLayout=t=3===e.offsetWidth,t&&(n.style.zoom=1)),n.removeChild(i))}),function(){var t=it.createElement("div");ft.deleteExpando=!0;try{delete t.test}catch(e){ft.deleteExpando=!1}t=null}();var Dt=function(t){var e=ht.noData[(t.nodeName+" ").toLowerCase()],n=+t.nodeType||1;return 1!==n&&9!==n?!1:!e||e!==!0&&t.getAttribute("classid")===e},zt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,qt=/([A-Z])/g;ht.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(t){return t=t.nodeType?ht.cache[t[ht.expando]]:t[ht.expando],!!t&&!u(t)},data:function(t,e,n){return c(t,e,n)},removeData:function(t,e){return f(t,e)},_data:function(t,e,n){return c(t,e,n,!0)},_removeData:function(t,e){return f(t,e,!0)}}),ht.fn.extend({data:function(t,e){var n,i,r,o=this[0],s=o&&o.attributes;if(void 0===t){if(this.length&&(r=ht.data(o),1===o.nodeType&&!ht._data(o,"parsedAttrs"))){for(n=s.length;n--;)s[n]&&(i=s[n].name,0===i.indexOf("data-")&&(i=ht.camelCase(i.slice(5)),l(o,i,r[i])));ht._data(o,"parsedAttrs",!0)}return r}return"object"==typeof t?this.each(function(){ht.data(this,t)}):arguments.length>1?this.each(function(){ht.data(this,t,e)}):o?l(o,t,ht.data(o,t)):void 0},removeData:function(t){return this.each(function(){ht.removeData(this,t)})}}),ht.extend({queue:function(t,e,n){var i;return t?(e=(e||"fx")+"queue",i=ht._data(t,e),n&&(!i||ht.isArray(n)?i=ht._data(t,e,ht.makeArray(n)):i.push(n)),i||[]):void 0},dequeue:function(t,e){e=e||"fx";var n=ht.queue(t,e),i=n.length,r=n.shift(),o=ht._queueHooks(t,e),s=function(){ht.dequeue(t,e)};"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===e&&n.unshift("inprogress"),delete o.stop,r.call(t,s,o)),!i&&o&&o.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return ht._data(t,n)||ht._data(t,n,{empty:ht.Callbacks("once memory").add(function(){ht._removeData(t,e+"queue"),ht._removeData(t,n)})})}}),ht.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?ht.queue(this[0],t):void 0===e?this:this.each(function(){var n=ht.queue(this,t,e);ht._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&ht.dequeue(this,t)})},dequeue:function(t){return this.each(function(){ht.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,i=1,r=ht.Deferred(),o=this,s=this.length,a=function(){--i||r.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";s--;)n=ht._data(o[s],t+"queueHooks"),n&&n.empty&&(i++,n.empty.add(a));return a(),r.promise(e)}}),function(){var t;ft.shrinkWrapBlocks=function(){if(null!=t)return t;t=!1;var e,n,i;return n=it.getElementsByTagName("body")[0],n&&n.style?(e=it.createElement("div"),i=it.createElement("div"),i.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",n.appendChild(i).appendChild(e),"undefined"!=typeof e.style.zoom&&(e.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",e.appendChild(it.createElement("div")).style.width="5px",t=3!==e.offsetWidth),n.removeChild(i),t):void 0}}();var Ht=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,It=new RegExp("^(?:([+-])=|)("+Ht+")([a-z%]*)$","i"),Ot=["Top","Right","Bottom","Left"],Rt=function(t,e){return t=e||t,"none"===ht.css(t,"display")||!ht.contains(t.ownerDocument,t)},Wt=function(t,e,n,i,r,o,s){var a=0,l=t.length,u=null==n;if("object"===ht.type(n)){r=!0;for(a in n)Wt(t,e,a,n[a],!0,o,s)}else if(void 0!==i&&(r=!0,ht.isFunction(i)||(s=!0),u&&(s?(e.call(t,i),e=null):(u=e,e=function(t,e,n){return u.call(ht(t),n)})),e))for(;l>a;a++)e(t[a],n,s?i:i.call(t[a],a,e(t[a],n)));return r?t:u?e.call(t):l?e(t[0],n):o},Ft=/^(?:checkbox|radio)$/i,Mt=/<([\w:-]+)/,Pt=/^$|\/(?:java|ecma)script/i,Bt=/^\s+/,$t="abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";!function(){var t=it.createElement("div"),e=it.createDocumentFragment(),n=it.createElement("input");t.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",ft.leadingWhitespace=3===t.firstChild.nodeType,ft.tbody=!t.getElementsByTagName("tbody").length,ft.htmlSerialize=!!t.getElementsByTagName("link").length,ft.html5Clone="<:nav></:nav>"!==it.createElement("nav").cloneNode(!0).outerHTML,n.type="checkbox",n.checked=!0,e.appendChild(n),ft.appendChecked=n.checked,t.innerHTML="<textarea>x</textarea>",ft.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue,e.appendChild(t),n=it.createElement("input"),n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),t.appendChild(n),ft.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,ft.noCloneEvent=!!t.addEventListener,t[ht.expando]=1,ft.attributes=!t.getAttribute(ht.expando)}();var Xt={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:ft.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]};Xt.optgroup=Xt.option,Xt.tbody=Xt.tfoot=Xt.colgroup=Xt.caption=Xt.thead,Xt.th=Xt.td;var Ut=/<|&#?\w+;/,Vt=/<tbody/i;!function(){var e,n,i=it.createElement("div");for(e in{submit:!0,change:!0,focusin:!0})n="on"+e,(ft[e]=n in t)||(i.setAttribute(n,"t"),ft[e]=i.attributes[n].expando===!1);i=null}();var Yt=/^(?:input|select|textarea)$/i,Qt=/^key/,Gt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Jt=/^(?:focusinfocus|focusoutblur)$/,Kt=/^([^.]*)(?:\.(.+)|)/;ht.event={global:{},add:function(t,e,n,i,r){var o,s,a,l,u,c,f,d,h,p,m,g=ht._data(t);if(g){for(n.handler&&(l=n,n=l.handler,r=l.selector),n.guid||(n.guid=ht.guid++),(s=g.events)||(s=g.events={}),(c=g.handle)||(c=g.handle=function(t){return"undefined"==typeof ht||t&&ht.event.triggered===t.type?void 0:ht.event.dispatch.apply(c.elem,arguments)},c.elem=t),e=(e||"").match(Nt)||[""],a=e.length;a--;)o=Kt.exec(e[a])||[],h=m=o[1],p=(o[2]||"").split(".").sort(),h&&(u=ht.event.special[h]||{},h=(r?u.delegateType:u.bindType)||h,u=ht.event.special[h]||{},f=ht.extend({type:h,origType:m,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&ht.expr.match.needsContext.test(r),namespace:p.join(".")},l),(d=s[h])||(d=s[h]=[],d.delegateCount=0,u.setup&&u.setup.call(t,i,p,c)!==!1||(t.addEventListener?t.addEventListener(h,c,!1):t.attachEvent&&t.attachEvent("on"+h,c))),u.add&&(u.add.call(t,f),f.handler.guid||(f.handler.guid=n.guid)),r?d.splice(d.delegateCount++,0,f):d.push(f),ht.event.global[h]=!0);t=null}},remove:function(t,e,n,i,r){var o,s,a,l,u,c,f,d,h,p,m,g=ht.hasData(t)&&ht._data(t);if(g&&(c=g.events)){for(e=(e||"").match(Nt)||[""],u=e.length;u--;)if(a=Kt.exec(e[u])||[],h=m=a[1],p=(a[2]||"").split(".").sort(),h){for(f=ht.event.special[h]||{},h=(i?f.delegateType:f.bindType)||h,d=c[h]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),l=o=d.length;o--;)s=d[o],!r&&m!==s.origType||n&&n.guid!==s.guid||a&&!a.test(s.namespace)||i&&i!==s.selector&&("**"!==i||!s.selector)||(d.splice(o,1),s.selector&&d.delegateCount--,f.remove&&f.remove.call(t,s));l&&!d.length&&(f.teardown&&f.teardown.call(t,p,g.handle)!==!1||ht.removeEvent(t,h,g.handle),delete c[h])}else for(h in c)ht.event.remove(t,h+e[u],n,i,!0);ht.isEmptyObject(c)&&(delete g.handle,ht._removeData(t,"events"))}},trigger:function(e,n,i,r){var o,s,a,l,u,c,f,d=[i||it],h=ct.call(e,"type")?e.type:e,p=ct.call(e,"namespace")?e.namespace.split("."):[];if(a=c=i=i||it,3!==i.nodeType&&8!==i.nodeType&&!Jt.test(h+ht.event.triggered)&&(h.indexOf(".")>-1&&(p=h.split("."),h=p.shift(),p.sort()),s=h.indexOf(":")<0&&"on"+h,e=e[ht.expando]?e:new ht.Event(h,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),n=null==n?[e]:ht.makeArray(n,[e]),u=ht.event.special[h]||{},r||!u.trigger||u.trigger.apply(i,n)!==!1)){if(!r&&!u.noBubble&&!ht.isWindow(i)){for(l=u.delegateType||h,Jt.test(l+h)||(a=a.parentNode);a;a=a.parentNode)d.push(a),c=a;c===(i.ownerDocument||it)&&d.push(c.defaultView||c.parentWindow||t)}for(f=0;(a=d[f++])&&!e.isPropagationStopped();)e.type=f>1?l:u.bindType||h,o=(ht._data(a,"events")||{})[e.type]&&ht._data(a,"handle"),o&&o.apply(a,n),o=s&&a[s],o&&o.apply&&Dt(a)&&(e.result=o.apply(a,n),e.result===!1&&e.preventDefault());if(e.type=h,!r&&!e.isDefaultPrevented()&&(!u._default||u._default.apply(d.pop(),n)===!1)&&Dt(i)&&s&&i[h]&&!ht.isWindow(i)){c=i[s],c&&(i[s]=null),ht.event.triggered=h;try{i[h]()}catch(m){}ht.event.triggered=void 0,c&&(i[s]=c)}return e.result}},dispatch:function(t){t=ht.event.fix(t);var e,n,i,r,o,s=[],a=rt.call(arguments),l=(ht._data(this,"events")||{})[t.type]||[],u=ht.event.special[t.type]||{};if(a[0]=t,t.delegateTarget=this,!u.preDispatch||u.preDispatch.call(this,t)!==!1){for(s=ht.event.handlers.call(this,t,l),e=0;(r=s[e++])&&!t.isPropagationStopped();)for(t.currentTarget=r.elem,n=0;(o=r.handlers[n++])&&!t.isImmediatePropagationStopped();)t.rnamespace&&!t.rnamespace.test(o.namespace)||(t.handleObj=o,t.data=o.data,i=((ht.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,a),void 0!==i&&(t.result=i)===!1&&(t.preventDefault(),t.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,t),t.result}},handlers:function(t,e){var n,i,r,o,s=[],a=e.delegateCount,l=t.target;if(a&&l.nodeType&&("click"!==t.type||isNaN(t.button)||t.button<1))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==t.type)){for(i=[],n=0;a>n;n++)o=e[n],r=o.selector+" ",void 0===i[r]&&(i[r]=o.needsContext?ht(r,this).index(l)>-1:ht.find(r,this,null,[l]).length),i[r]&&i.push(o);i.length&&s.push({elem:l,handlers:i})}return a<e.length&&s.push({elem:this,handlers:e.slice(a)}),s},fix:function(t){if(t[ht.expando])return t;var e,n,i,r=t.type,o=t,s=this.fixHooks[r];for(s||(this.fixHooks[r]=s=Gt.test(r)?this.mouseHooks:Qt.test(r)?this.keyHooks:{}),i=s.props?this.props.concat(s.props):this.props,t=new ht.Event(o),e=i.length;e--;)n=i[e],t[n]=o[n];return t.target||(t.target=o.srcElement||it),3===t.target.nodeType&&(t.target=t.target.parentNode),t.metaKey=!!t.metaKey,s.filter?s.filter(t,o):t},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(t,e){return null==t.which&&(t.which=null!=e.charCode?e.charCode:e.keyCode),t}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(t,e){var n,i,r,o=e.button,s=e.fromElement;return null==t.pageX&&null!=e.clientX&&(i=t.target.ownerDocument||it,r=i.documentElement,n=i.body,t.pageX=e.clientX+(r&&r.scrollLeft||n&&n.scrollLeft||0)-(r&&r.clientLeft||n&&n.clientLeft||0),t.pageY=e.clientY+(r&&r.scrollTop||n&&n.scrollTop||0)-(r&&r.clientTop||n&&n.clientTop||0)),!t.relatedTarget&&s&&(t.relatedTarget=s===t.target?e.toElement:s),t.which||void 0===o||(t.which=1&o?1:2&o?3:4&o?2:0),t}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==x()&&this.focus)try{return this.focus(),!1}catch(t){}},delegateType:"focusin"},blur:{trigger:function(){return this===x()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return ht.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(t){return ht.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}},simulate:function(t,e,n){var i=ht.extend(new ht.Event,n,{type:t,isSimulated:!0});ht.event.trigger(i,null,e),i.isDefaultPrevented()&&n.preventDefault()}},ht.removeEvent=it.removeEventListener?function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)}:function(t,e,n){var i="on"+e;t.detachEvent&&("undefined"==typeof t[i]&&(t[i]=null),t.detachEvent(i,n))},ht.Event=function(t,e){return this instanceof ht.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?y:b):this.type=t,e&&ht.extend(this,e),this.timeStamp=t&&t.timeStamp||ht.now(),void(this[ht.expando]=!0)):new ht.Event(t,e)},ht.Event.prototype={constructor:ht.Event,isDefaultPrevented:b,isPropagationStopped:b,isImmediatePropagationStopped:b,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=y,t&&(t.preventDefault?t.preventDefault():t.returnValue=!1)},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=y,t&&!this.isSimulated&&(t.stopPropagation&&t.stopPropagation(),t.cancelBubble=!0)},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=y,t&&t.stopImmediatePropagation&&t.stopImmediatePropagation(),this.stopPropagation()}},ht.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){ht.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,i=this,r=t.relatedTarget,o=t.handleObj;return r&&(r===i||ht.contains(i,r))||(t.type=o.origType,n=o.handler.apply(this,arguments),t.type=e),n}}}),ft.submit||(ht.event.special.submit={setup:function(){return ht.nodeName(this,"form")?!1:void ht.event.add(this,"click._submit keypress._submit",function(t){var e=t.target,n=ht.nodeName(e,"input")||ht.nodeName(e,"button")?ht.prop(e,"form"):void 0;n&&!ht._data(n,"submit")&&(ht.event.add(n,"submit._submit",function(t){t._submitBubble=!0}),ht._data(n,"submit",!0))})},postDispatch:function(t){t._submitBubble&&(delete t._submitBubble,this.parentNode&&!t.isTrigger&&ht.event.simulate("submit",this.parentNode,t))},teardown:function(){return ht.nodeName(this,"form")?!1:void ht.event.remove(this,"._submit")}}),ft.change||(ht.event.special.change={setup:function(){return Yt.test(this.nodeName)?("checkbox"!==this.type&&"radio"!==this.type||(ht.event.add(this,"propertychange._change",function(t){"checked"===t.originalEvent.propertyName&&(this._justChanged=!0)}),ht.event.add(this,"click._change",function(t){this._justChanged&&!t.isTrigger&&(this._justChanged=!1),ht.event.simulate("change",this,t)})),!1):void ht.event.add(this,"beforeactivate._change",function(t){var e=t.target;Yt.test(e.nodeName)&&!ht._data(e,"change")&&(ht.event.add(e,"change._change",function(t){!this.parentNode||t.isSimulated||t.isTrigger||ht.event.simulate("change",this.parentNode,t)}),ht._data(e,"change",!0))})},handle:function(t){var e=t.target;return this!==e||t.isSimulated||t.isTrigger||"radio"!==e.type&&"checkbox"!==e.type?t.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return ht.event.remove(this,"._change"),!Yt.test(this.nodeName)}}),ft.focusin||ht.each({focus:"focusin",blur:"focusout"},function(t,e){var n=function(t){ht.event.simulate(e,t.target,ht.event.fix(t))};ht.event.special[e]={setup:function(){var i=this.ownerDocument||this,r=ht._data(i,e);r||i.addEventListener(t,n,!0),ht._data(i,e,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this,r=ht._data(i,e)-1;r?ht._data(i,e,r):(i.removeEventListener(t,n,!0),ht._removeData(i,e))}}}),ht.fn.extend({on:function(t,e,n,i){return _(this,t,e,n,i)},one:function(t,e,n,i){return _(this,t,e,n,i,1)},off:function(t,e,n){var i,r;if(t&&t.preventDefault&&t.handleObj)return i=t.handleObj,ht(t.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return e!==!1&&"function"!=typeof e||(n=e,e=void 0),n===!1&&(n=b),this.each(function(){ht.event.remove(this,t,n,e)})},trigger:function(t,e){return this.each(function(){ht.event.trigger(t,e,this)})},triggerHandler:function(t,e){var n=this[0];return n?ht.event.trigger(t,e,n,!0):void 0}});var Zt=/ jQuery\d+="(?:null|\d+)"/g,te=new RegExp("<(?:"+$t+")[\\s/>]","i"),ee=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,ne=/<script|<style|<link/i,ie=/checked\s*(?:[^=]|=\s*.checked.)/i,re=/^true\/(.*)/,oe=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,se=h(it),ae=se.appendChild(it.createElement("div"));ht.extend({htmlPrefilter:function(t){return t.replace(ee,"<$1></$2>")},clone:function(t,e,n){var i,r,o,s,a,l=ht.contains(t.ownerDocument,t);if(ft.html5Clone||ht.isXMLDoc(t)||!te.test("<"+t.nodeName+">")?o=t.cloneNode(!0):(ae.innerHTML=t.outerHTML,ae.removeChild(o=ae.firstChild)),!(ft.noCloneEvent&&ft.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||ht.isXMLDoc(t)))for(i=p(o),a=p(t),s=0;null!=(r=a[s]);++s)i[s]&&j(r,i[s]);if(e)if(n)for(a=a||p(t),i=i||p(o),s=0;null!=(r=a[s]);s++)C(r,i[s]);else C(t,o);return i=p(o,"script"),i.length>0&&m(i,!l&&p(t,"script")),i=a=r=null,o},cleanData:function(t,e){for(var n,i,r,o,s=0,a=ht.expando,l=ht.cache,u=ft.attributes,c=ht.event.special;null!=(n=t[s]);s++)if((e||Dt(n))&&(r=n[a],o=r&&l[r])){if(o.events)for(i in o.events)c[i]?ht.event.remove(n,i):ht.removeEvent(n,i,o.handle);l[r]&&(delete l[r],u||"undefined"==typeof n.removeAttribute?n[a]=void 0:n.removeAttribute(a),nt.push(r))}}}),ht.fn.extend({domManip:S,detach:function(t){return k(this,t,!0)},remove:function(t){return k(this,t)},text:function(t){return Wt(this,function(t){return void 0===t?ht.text(this):this.empty().append((this[0]&&this[0].ownerDocument||it).createTextNode(t))},null,t,arguments.length)},append:function(){return S(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=w(this,t);e.appendChild(t)}})},prepend:function(){return S(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=w(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return S(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return S(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++){for(1===t.nodeType&&ht.cleanData(p(t,!1));t.firstChild;)t.removeChild(t.firstChild);t.options&&ht.nodeName(t,"select")&&(t.options.length=0)}return this},clone:function(t,e){return t=null==t?!1:t,e=null==e?t:e,this.map(function(){return ht.clone(this,t,e)})},html:function(t){return Wt(this,function(t){var e=this[0]||{},n=0,i=this.length;if(void 0===t)return 1===e.nodeType?e.innerHTML.replace(Zt,""):void 0;if("string"==typeof t&&!ne.test(t)&&(ft.htmlSerialize||!te.test(t))&&(ft.leadingWhitespace||!Bt.test(t))&&!Xt[(Mt.exec(t)||["",""])[1].toLowerCase()]){t=ht.htmlPrefilter(t);try{for(;i>n;n++)e=this[n]||{},1===e.nodeType&&(ht.cleanData(p(e,!1)),e.innerHTML=t);e=0}catch(r){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return S(this,arguments,function(e){var n=this.parentNode;ht.inArray(this,t)<0&&(ht.cleanData(p(this)),
n&&n.replaceChild(e,this))},t)}}),ht.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){ht.fn[t]=function(t){for(var n,i=0,r=[],o=ht(t),s=o.length-1;s>=i;i++)n=i===s?this:this.clone(!0),ht(o[i])[e](n),st.apply(r,n.get());return this.pushStack(r)}});var le,ue={HTML:"block",BODY:"block"},ce=/^margin/,fe=new RegExp("^("+Ht+")(?!px)[a-z%]+$","i"),de=function(t,e,n,i){var r,o,s={};for(o in e)s[o]=t.style[o],t.style[o]=e[o];r=n.apply(t,i||[]);for(o in e)t.style[o]=s[o];return r},he=it.documentElement;!function(){function e(){var e,c,f=it.documentElement;f.appendChild(l),u.style.cssText="-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",n=r=a=!1,i=s=!0,t.getComputedStyle&&(c=t.getComputedStyle(u),n="1%"!==(c||{}).top,a="2px"===(c||{}).marginLeft,r="4px"===(c||{width:"4px"}).width,u.style.marginRight="50%",i="4px"===(c||{marginRight:"4px"}).marginRight,e=u.appendChild(it.createElement("div")),e.style.cssText=u.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",e.style.marginRight=e.style.width="0",u.style.width="1px",s=!parseFloat((t.getComputedStyle(e)||{}).marginRight),u.removeChild(e)),u.style.display="none",o=0===u.getClientRects().length,o&&(u.style.display="",u.innerHTML="<table><tr><td></td><td>t</td></tr></table>",u.childNodes[0].style.borderCollapse="separate",e=u.getElementsByTagName("td"),e[0].style.cssText="margin:0;border:0;padding:0;display:none",o=0===e[0].offsetHeight,o&&(e[0].style.display="",e[1].style.display="none",o=0===e[0].offsetHeight)),f.removeChild(l)}var n,i,r,o,s,a,l=it.createElement("div"),u=it.createElement("div");u.style&&(u.style.cssText="float:left;opacity:.5",ft.opacity="0.5"===u.style.opacity,ft.cssFloat=!!u.style.cssFloat,u.style.backgroundClip="content-box",u.cloneNode(!0).style.backgroundClip="",ft.clearCloneStyle="content-box"===u.style.backgroundClip,l=it.createElement("div"),l.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",u.innerHTML="",l.appendChild(u),ft.boxSizing=""===u.style.boxSizing||""===u.style.MozBoxSizing||""===u.style.WebkitBoxSizing,ht.extend(ft,{reliableHiddenOffsets:function(){return null==n&&e(),o},boxSizingReliable:function(){return null==n&&e(),r},pixelMarginRight:function(){return null==n&&e(),i},pixelPosition:function(){return null==n&&e(),n},reliableMarginRight:function(){return null==n&&e(),s},reliableMarginLeft:function(){return null==n&&e(),a}}))}();var pe,me,ge=/^(top|right|bottom|left)$/;t.getComputedStyle?(pe=function(e){var n=e.ownerDocument.defaultView;return n&&n.opener||(n=t),n.getComputedStyle(e)},me=function(t,e,n){var i,r,o,s,a=t.style;return n=n||pe(t),s=n?n.getPropertyValue(e)||n[e]:void 0,""!==s&&void 0!==s||ht.contains(t.ownerDocument,t)||(s=ht.style(t,e)),n&&!ft.pixelMarginRight()&&fe.test(s)&&ce.test(e)&&(i=a.width,r=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=n.width,a.width=i,a.minWidth=r,a.maxWidth=o),void 0===s?s:s+""}):he.currentStyle&&(pe=function(t){return t.currentStyle},me=function(t,e,n){var i,r,o,s,a=t.style;return n=n||pe(t),s=n?n[e]:void 0,null==s&&a&&a[e]&&(s=a[e]),fe.test(s)&&!ge.test(e)&&(i=a.left,r=t.runtimeStyle,o=r&&r.left,o&&(r.left=t.currentStyle.left),a.left="fontSize"===e?"1em":s,s=a.pixelLeft+"px",a.left=i,o&&(r.left=o)),void 0===s?s:s+""||"auto"});var ve=/alpha\([^)]*\)/i,ye=/opacity\s*=\s*([^)]*)/i,be=/^(none|table(?!-c[ea]).+)/,xe=new RegExp("^("+Ht+")(.*)$","i"),_e={position:"absolute",visibility:"hidden",display:"block"},we={letterSpacing:"0",fontWeight:"400"},Te=["Webkit","O","Moz","ms"],Ee=it.createElement("div").style;ht.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=me(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":ft.cssFloat?"cssFloat":"styleFloat"},style:function(t,e,n,i){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,o,s,a=ht.camelCase(e),l=t.style;if(e=ht.cssProps[a]||(ht.cssProps[a]=D(a)||a),s=ht.cssHooks[e]||ht.cssHooks[a],void 0===n)return s&&"get"in s&&void 0!==(r=s.get(t,!1,i))?r:l[e];if(o=typeof n,"string"===o&&(r=It.exec(n))&&r[1]&&(n=d(t,e,r),o="number"),null!=n&&n===n&&("number"===o&&(n+=r&&r[3]||(ht.cssNumber[a]?"":"px")),ft.clearCloneStyle||""!==n||0!==e.indexOf("background")||(l[e]="inherit"),!(s&&"set"in s&&void 0===(n=s.set(t,n,i)))))try{l[e]=n}catch(u){}}},css:function(t,e,n,i){var r,o,s,a=ht.camelCase(e);return e=ht.cssProps[a]||(ht.cssProps[a]=D(a)||a),s=ht.cssHooks[e]||ht.cssHooks[a],s&&"get"in s&&(o=s.get(t,!0,n)),void 0===o&&(o=me(t,e,i)),"normal"===o&&e in we&&(o=we[e]),""===n||n?(r=parseFloat(o),n===!0||isFinite(r)?r||0:o):o}}),ht.each(["height","width"],function(t,e){ht.cssHooks[e]={get:function(t,n,i){return n?be.test(ht.css(t,"display"))&&0===t.offsetWidth?de(t,_e,function(){return I(t,e,i)}):I(t,e,i):void 0},set:function(t,n,i){var r=i&&pe(t);return q(t,n,i?H(t,e,i,ft.boxSizing&&"border-box"===ht.css(t,"boxSizing",!1,r),r):0)}}}),ft.opacity||(ht.cssHooks.opacity={get:function(t,e){return ye.test((e&&t.currentStyle?t.currentStyle.filter:t.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":e?"1":""},set:function(t,e){var n=t.style,i=t.currentStyle,r=ht.isNumeric(e)?"alpha(opacity="+100*e+")":"",o=i&&i.filter||n.filter||"";n.zoom=1,(e>=1||""===e)&&""===ht.trim(o.replace(ve,""))&&n.removeAttribute&&(n.removeAttribute("filter"),""===e||i&&!i.filter)||(n.filter=ve.test(o)?o.replace(ve,r):o+" "+r)}}),ht.cssHooks.marginRight=A(ft.reliableMarginRight,function(t,e){return e?de(t,{display:"inline-block"},me,[t,"marginRight"]):void 0}),ht.cssHooks.marginLeft=A(ft.reliableMarginLeft,function(t,e){return e?(parseFloat(me(t,"marginLeft"))||(ht.contains(t.ownerDocument,t)?t.getBoundingClientRect().left-de(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}):0))+"px":void 0}),ht.each({margin:"",padding:"",border:"Width"},function(t,e){ht.cssHooks[t+e]={expand:function(n){for(var i=0,r={},o="string"==typeof n?n.split(" "):[n];4>i;i++)r[t+Ot[i]+e]=o[i]||o[i-2]||o[0];return r}},ce.test(t)||(ht.cssHooks[t+e].set=q)}),ht.fn.extend({css:function(t,e){return Wt(this,function(t,e,n){var i,r,o={},s=0;if(ht.isArray(e)){for(i=pe(t),r=e.length;r>s;s++)o[e[s]]=ht.css(t,e[s],!1,i);return o}return void 0!==n?ht.style(t,e,n):ht.css(t,e)},t,e,arguments.length>1)},show:function(){return z(this,!0)},hide:function(){return z(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){Rt(this)?ht(this).show():ht(this).hide()})}}),ht.Tween=O,O.prototype={constructor:O,init:function(t,e,n,i,r,o){this.elem=t,this.prop=n,this.easing=r||ht.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=i,this.unit=o||(ht.cssNumber[n]?"":"px")},cur:function(){var t=O.propHooks[this.prop];return t&&t.get?t.get(this):O.propHooks._default.get(this)},run:function(t){var e,n=O.propHooks[this.prop];return this.options.duration?this.pos=e=ht.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):O.propHooks._default.set(this),this}},O.prototype.init.prototype=O.prototype,O.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=ht.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){ht.fx.step[t.prop]?ht.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[ht.cssProps[t.prop]]&&!ht.cssHooks[t.prop]?t.elem[t.prop]=t.now:ht.style(t.elem,t.prop,t.now+t.unit)}}},O.propHooks.scrollTop=O.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},ht.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},ht.fx=O.prototype.init,ht.fx.step={};var Ce,je,Se=/^(?:toggle|show|hide)$/,ke=/queueHooks$/;ht.Animation=ht.extend(B,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return d(n.elem,t,It.exec(e),n),n}]},tweener:function(t,e){ht.isFunction(t)?(e=t,t=["*"]):t=t.match(Nt);for(var n,i=0,r=t.length;r>i;i++)n=t[i],B.tweeners[n]=B.tweeners[n]||[],B.tweeners[n].unshift(e)},prefilters:[M],prefilter:function(t,e){e?B.prefilters.unshift(t):B.prefilters.push(t)}}),ht.speed=function(t,e,n){var i=t&&"object"==typeof t?ht.extend({},t):{complete:n||!n&&e||ht.isFunction(t)&&t,duration:t,easing:n&&e||e&&!ht.isFunction(e)&&e};return i.duration=ht.fx.off?0:"number"==typeof i.duration?i.duration:i.duration in ht.fx.speeds?ht.fx.speeds[i.duration]:ht.fx.speeds._default,null!=i.queue&&i.queue!==!0||(i.queue="fx"),i.old=i.complete,i.complete=function(){ht.isFunction(i.old)&&i.old.call(this),i.queue&&ht.dequeue(this,i.queue)},i},ht.fn.extend({fadeTo:function(t,e,n,i){return this.filter(Rt).css("opacity",0).show().end().animate({opacity:e},t,n,i)},animate:function(t,e,n,i){var r=ht.isEmptyObject(t),o=ht.speed(e,n,i),s=function(){var e=B(this,ht.extend({},t),o);(r||ht._data(this,"finish"))&&e.stop(!0)};return s.finish=s,r||o.queue===!1?this.each(s):this.queue(o.queue,s)},stop:function(t,e,n){var i=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",o=ht.timers,s=ht._data(this);if(r)s[r]&&s[r].stop&&i(s[r]);else for(r in s)s[r]&&s[r].stop&&ke.test(r)&&i(s[r]);for(r=o.length;r--;)o[r].elem!==this||null!=t&&o[r].queue!==t||(o[r].anim.stop(n),e=!1,o.splice(r,1));!e&&n||ht.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,n=ht._data(this),i=n[t+"queue"],r=n[t+"queueHooks"],o=ht.timers,s=i?i.length:0;for(n.finish=!0,ht.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;s>e;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete n.finish})}}),ht.each(["toggle","show","hide"],function(t,e){var n=ht.fn[e];ht.fn[e]=function(t,i,r){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(W(e,!0),t,i,r)}}),ht.each({slideDown:W("show"),slideUp:W("hide"),slideToggle:W("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){ht.fn[t]=function(t,n,i){return this.animate(e,t,n,i)}}),ht.timers=[],ht.fx.tick=function(){var t,e=ht.timers,n=0;for(Ce=ht.now();n<e.length;n++)t=e[n],t()||e[n]!==t||e.splice(n--,1);e.length||ht.fx.stop(),Ce=void 0},ht.fx.timer=function(t){ht.timers.push(t),t()?ht.fx.start():ht.timers.pop()},ht.fx.interval=13,ht.fx.start=function(){je||(je=t.setInterval(ht.fx.tick,ht.fx.interval))},ht.fx.stop=function(){t.clearInterval(je),je=null},ht.fx.speeds={slow:600,fast:200,_default:400},ht.fn.delay=function(e,n){return e=ht.fx?ht.fx.speeds[e]||e:e,n=n||"fx",this.queue(n,function(n,i){var r=t.setTimeout(n,e);i.stop=function(){t.clearTimeout(r)}})},function(){var t,e=it.createElement("input"),n=it.createElement("div"),i=it.createElement("select"),r=i.appendChild(it.createElement("option"));n=it.createElement("div"),n.setAttribute("className","t"),n.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",t=n.getElementsByTagName("a")[0],e.setAttribute("type","checkbox"),n.appendChild(e),t=n.getElementsByTagName("a")[0],t.style.cssText="top:1px",ft.getSetAttribute="t"!==n.className,ft.style=/top/.test(t.getAttribute("style")),ft.hrefNormalized="/a"===t.getAttribute("href"),ft.checkOn=!!e.value,ft.optSelected=r.selected,ft.enctype=!!it.createElement("form").enctype,i.disabled=!0,ft.optDisabled=!r.disabled,e=it.createElement("input"),e.setAttribute("value",""),ft.input=""===e.getAttribute("value"),e.value="t",e.setAttribute("type","radio"),ft.radioValue="t"===e.value}();var Ne=/\r/g,Le=/[\x20\t\r\n\f]+/g;ht.fn.extend({val:function(t){var e,n,i,r=this[0];return arguments.length?(i=ht.isFunction(t),this.each(function(n){var r;1===this.nodeType&&(r=i?t.call(this,n,ht(this).val()):t,null==r?r="":"number"==typeof r?r+="":ht.isArray(r)&&(r=ht.map(r,function(t){return null==t?"":t+""})),e=ht.valHooks[this.type]||ht.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))})):r?(e=ht.valHooks[r.type]||ht.valHooks[r.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(n=e.get(r,"value"))?n:(n=r.value,"string"==typeof n?n.replace(Ne,""):null==n?"":n)):void 0}}),ht.extend({valHooks:{option:{get:function(t){var e=ht.find.attr(t,"value");return null!=e?e:ht.trim(ht.text(t)).replace(Le," ")}},select:{get:function(t){for(var e,n,i=t.options,r=t.selectedIndex,o="select-one"===t.type||0>r,s=o?null:[],a=o?r+1:i.length,l=0>r?a:o?r:0;a>l;l++)if(n=i[l],(n.selected||l===r)&&(ft.optDisabled?!n.disabled:null===n.getAttribute("disabled"))&&(!n.parentNode.disabled||!ht.nodeName(n.parentNode,"optgroup"))){if(e=ht(n).val(),o)return e;s.push(e)}return s},set:function(t,e){for(var n,i,r=t.options,o=ht.makeArray(e),s=r.length;s--;)if(i=r[s],ht.inArray(ht.valHooks.option.get(i),o)>-1)try{i.selected=n=!0}catch(a){i.scrollHeight}else i.selected=!1;return n||(t.selectedIndex=-1),r}}}}),ht.each(["radio","checkbox"],function(){ht.valHooks[this]={set:function(t,e){return ht.isArray(e)?t.checked=ht.inArray(ht(t).val(),e)>-1:void 0}},ft.checkOn||(ht.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var Ae,De,ze=ht.expr.attrHandle,qe=/^(?:checked|selected)$/i,He=ft.getSetAttribute,Ie=ft.input;ht.fn.extend({attr:function(t,e){return Wt(this,ht.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){ht.removeAttr(this,t)})}}),ht.extend({attr:function(t,e,n){var i,r,o=t.nodeType;return 3!==o&&8!==o&&2!==o?"undefined"==typeof t.getAttribute?ht.prop(t,e,n):(1===o&&ht.isXMLDoc(t)||(e=e.toLowerCase(),r=ht.attrHooks[e]||(ht.expr.match.bool.test(e)?De:Ae)),void 0!==n?null===n?void ht.removeAttr(t,e):r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:(t.setAttribute(e,n+""),n):r&&"get"in r&&null!==(i=r.get(t,e))?i:(i=ht.find.attr(t,e),null==i?void 0:i)):void 0},attrHooks:{type:{set:function(t,e){if(!ft.radioValue&&"radio"===e&&ht.nodeName(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,i,r=0,o=e&&e.match(Nt);if(o&&1===t.nodeType)for(;n=o[r++];)i=ht.propFix[n]||n,ht.expr.match.bool.test(n)?Ie&&He||!qe.test(n)?t[i]=!1:t[ht.camelCase("default-"+n)]=t[i]=!1:ht.attr(t,n,""),t.removeAttribute(He?n:i)}}),De={set:function(t,e,n){return e===!1?ht.removeAttr(t,n):Ie&&He||!qe.test(n)?t.setAttribute(!He&&ht.propFix[n]||n,n):t[ht.camelCase("default-"+n)]=t[n]=!0,n}},ht.each(ht.expr.match.bool.source.match(/\w+/g),function(t,e){var n=ze[e]||ht.find.attr;Ie&&He||!qe.test(e)?ze[e]=function(t,e,i){var r,o;return i||(o=ze[e],ze[e]=r,r=null!=n(t,e,i)?e.toLowerCase():null,ze[e]=o),r}:ze[e]=function(t,e,n){return n?void 0:t[ht.camelCase("default-"+e)]?e.toLowerCase():null}}),Ie&&He||(ht.attrHooks.value={set:function(t,e,n){return ht.nodeName(t,"input")?void(t.defaultValue=e):Ae&&Ae.set(t,e,n)}}),He||(Ae={set:function(t,e,n){var i=t.getAttributeNode(n);return i||t.setAttributeNode(i=t.ownerDocument.createAttribute(n)),i.value=e+="","value"===n||e===t.getAttribute(n)?e:void 0}},ze.id=ze.name=ze.coords=function(t,e,n){var i;return n?void 0:(i=t.getAttributeNode(e))&&""!==i.value?i.value:null},ht.valHooks.button={get:function(t,e){var n=t.getAttributeNode(e);return n&&n.specified?n.value:void 0},set:Ae.set},ht.attrHooks.contenteditable={set:function(t,e,n){Ae.set(t,""===e?!1:e,n)}},ht.each(["width","height"],function(t,e){ht.attrHooks[e]={set:function(t,n){return""===n?(t.setAttribute(e,"auto"),n):void 0}}})),ft.style||(ht.attrHooks.style={get:function(t){return t.style.cssText||void 0},set:function(t,e){return t.style.cssText=e+""}});var Oe=/^(?:input|select|textarea|button|object)$/i,Re=/^(?:a|area)$/i;ht.fn.extend({prop:function(t,e){return Wt(this,ht.prop,t,e,arguments.length>1)},removeProp:function(t){return t=ht.propFix[t]||t,this.each(function(){try{this[t]=void 0,delete this[t]}catch(e){}})}}),ht.extend({prop:function(t,e,n){var i,r,o=t.nodeType;return 3!==o&&8!==o&&2!==o?(1===o&&ht.isXMLDoc(t)||(e=ht.propFix[e]||e,r=ht.propHooks[e]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:t[e]=n:r&&"get"in r&&null!==(i=r.get(t,e))?i:t[e]):void 0},propHooks:{tabIndex:{get:function(t){var e=ht.find.attr(t,"tabindex");return e?parseInt(e,10):Oe.test(t.nodeName)||Re.test(t.nodeName)&&t.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),ft.hrefNormalized||ht.each(["href","src"],function(t,e){ht.propHooks[e]={get:function(t){return t.getAttribute(e,4)}}}),ft.optSelected||(ht.propHooks.selected={get:function(t){var e=t.parentNode;return e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex),null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),ht.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){ht.propFix[this.toLowerCase()]=this}),ft.enctype||(ht.propFix.enctype="encoding");var We=/[\t\r\n\f]/g;ht.fn.extend({addClass:function(t){var e,n,i,r,o,s,a,l=0;if(ht.isFunction(t))return this.each(function(e){ht(this).addClass(t.call(this,e,$(this)))});if("string"==typeof t&&t)for(e=t.match(Nt)||[];n=this[l++];)if(r=$(n),i=1===n.nodeType&&(" "+r+" ").replace(We," ")){for(s=0;o=e[s++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");a=ht.trim(i),r!==a&&ht.attr(n,"class",a)}return this},removeClass:function(t){var e,n,i,r,o,s,a,l=0;if(ht.isFunction(t))return this.each(function(e){ht(this).removeClass(t.call(this,e,$(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(Nt)||[];n=this[l++];)if(r=$(n),i=1===n.nodeType&&(" "+r+" ").replace(We," ")){for(s=0;o=e[s++];)for(;i.indexOf(" "+o+" ")>-1;)i=i.replace(" "+o+" "," ");a=ht.trim(i),r!==a&&ht.attr(n,"class",a)}return this},toggleClass:function(t,e){var n=typeof t;return"boolean"==typeof e&&"string"===n?e?this.addClass(t):this.removeClass(t):ht.isFunction(t)?this.each(function(n){ht(this).toggleClass(t.call(this,n,$(this),e),e)}):this.each(function(){var e,i,r,o;if("string"===n)for(i=0,r=ht(this),o=t.match(Nt)||[];e=o[i++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else void 0!==t&&"boolean"!==n||(e=$(this),e&&ht._data(this,"__className__",e),ht.attr(this,"class",e||t===!1?"":ht._data(this,"__className__")||""))})},hasClass:function(t){var e,n,i=0;for(e=" "+t+" ";n=this[i++];)if(1===n.nodeType&&(" "+$(n)+" ").replace(We," ").indexOf(e)>-1)return!0;return!1}}),ht.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(t,e){ht.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}),ht.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}});var Fe=t.location,Me=ht.now(),Pe=/\?/,Be=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;ht.parseJSON=function(e){if(t.JSON&&t.JSON.parse)return t.JSON.parse(e+"");var n,i=null,r=ht.trim(e+"");return r&&!ht.trim(r.replace(Be,function(t,e,r,o){return n&&e&&(i=0),0===i?t:(n=r||e,i+=!o-!r,"")}))?Function("return "+r)():ht.error("Invalid JSON: "+e)},ht.parseXML=function(e){var n,i;if(!e||"string"!=typeof e)return null;try{t.DOMParser?(i=new t.DOMParser,n=i.parseFromString(e,"text/xml")):(n=new t.ActiveXObject("Microsoft.XMLDOM"),n.async="false",n.loadXML(e))}catch(r){n=void 0}return n&&n.documentElement&&!n.getElementsByTagName("parsererror").length||ht.error("Invalid XML: "+e),n};var $e=/#.*$/,Xe=/([?&])_=[^&]*/,Ue=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Ve=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ye=/^(?:GET|HEAD)$/,Qe=/^\/\//,Ge=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Je={},Ke={},Ze="*/".concat("*"),tn=Fe.href,en=Ge.exec(tn.toLowerCase())||[];ht.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:tn,type:"GET",isLocal:Ve.test(en[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ze,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":ht.parseJSON,"text xml":ht.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?V(V(t,ht.ajaxSettings),e):V(ht.ajaxSettings,t)},ajaxPrefilter:X(Je),ajaxTransport:X(Ke),ajax:function(e,n){function i(e,n,i,r){var o,f,y,b,_,T=n;2!==x&&(x=2,l&&t.clearTimeout(l),c=void 0,a=r||"",w.readyState=e>0?4:0,o=e>=200&&300>e||304===e,i&&(b=Y(d,w,i)),b=Q(d,b,w,o),o?(d.ifModified&&(_=w.getResponseHeader("Last-Modified"),_&&(ht.lastModified[s]=_),_=w.getResponseHeader("etag"),_&&(ht.etag[s]=_)),204===e||"HEAD"===d.type?T="nocontent":304===e?T="notmodified":(T=b.state,f=b.data,y=b.error,o=!y)):(y=T,!e&&T||(T="error",0>e&&(e=0))),w.status=e,w.statusText=(n||T)+"",o?m.resolveWith(h,[f,T,w]):m.rejectWith(h,[w,T,y]),w.statusCode(v),v=void 0,u&&p.trigger(o?"ajaxSuccess":"ajaxError",[w,d,o?f:y]),g.fireWith(h,[w,T]),u&&(p.trigger("ajaxComplete",[w,d]),--ht.active||ht.event.trigger("ajaxStop")))}"object"==typeof e&&(n=e,e=void 0),n=n||{};var r,o,s,a,l,u,c,f,d=ht.ajaxSetup({},n),h=d.context||d,p=d.context&&(h.nodeType||h.jquery)?ht(h):ht.event,m=ht.Deferred(),g=ht.Callbacks("once memory"),v=d.statusCode||{},y={},b={},x=0,_="canceled",w={readyState:0,getResponseHeader:function(t){var e;if(2===x){if(!f)for(f={};e=Ue.exec(a);)f[e[1].toLowerCase()]=e[2];e=f[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return 2===x?a:null},setRequestHeader:function(t,e){var n=t.toLowerCase();return x||(t=b[n]=b[n]||t,y[t]=e),this},overrideMimeType:function(t){return x||(d.mimeType=t),this},statusCode:function(t){var e;if(t)if(2>x)for(e in t)v[e]=[v[e],t[e]];else w.always(t[w.status]);return this},abort:function(t){var e=t||_;return c&&c.abort(e),i(0,e),this}};if(m.promise(w).complete=g.add,w.success=w.done,w.error=w.fail,d.url=((e||d.url||tn)+"").replace($e,"").replace(Qe,en[1]+"//"),d.type=n.method||n.type||d.method||d.type,d.dataTypes=ht.trim(d.dataType||"*").toLowerCase().match(Nt)||[""],null==d.crossDomain&&(r=Ge.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]===en[1]&&r[2]===en[2]&&(r[3]||("http:"===r[1]?"80":"443"))===(en[3]||("http:"===en[1]?"80":"443")))),d.data&&d.processData&&"string"!=typeof d.data&&(d.data=ht.param(d.data,d.traditional)),U(Je,d,n,w),2===x)return w;u=ht.event&&d.global,u&&0===ht.active++&&ht.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!Ye.test(d.type),s=d.url,d.hasContent||(d.data&&(s=d.url+=(Pe.test(s)?"&":"?")+d.data,delete d.data),d.cache===!1&&(d.url=Xe.test(s)?s.replace(Xe,"$1_="+Me++):s+(Pe.test(s)?"&":"?")+"_="+Me++)),d.ifModified&&(ht.lastModified[s]&&w.setRequestHeader("If-Modified-Since",ht.lastModified[s]),ht.etag[s]&&w.setRequestHeader("If-None-Match",ht.etag[s])),(d.data&&d.hasContent&&d.contentType!==!1||n.contentType)&&w.setRequestHeader("Content-Type",d.contentType),w.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Ze+"; q=0.01":""):d.accepts["*"]);for(o in d.headers)w.setRequestHeader(o,d.headers[o]);if(d.beforeSend&&(d.beforeSend.call(h,w,d)===!1||2===x))return w.abort();_="abort";for(o in{success:1,error:1,complete:1})w[o](d[o]);if(c=U(Ke,d,n,w)){if(w.readyState=1,u&&p.trigger("ajaxSend",[w,d]),2===x)return w;d.async&&d.timeout>0&&(l=t.setTimeout(function(){w.abort("timeout")},d.timeout));try{x=1,c.send(y,i)}catch(T){if(!(2>x))throw T;i(-1,T)}}else i(-1,"No Transport");return w},getJSON:function(t,e,n){return ht.get(t,e,n,"json")},getScript:function(t,e){return ht.get(t,void 0,e,"script")}}),ht.each(["get","post"],function(t,e){ht[e]=function(t,n,i,r){return ht.isFunction(n)&&(r=r||i,i=n,n=void 0),ht.ajax(ht.extend({url:t,type:e,dataType:r,data:n,success:i},ht.isPlainObject(t)&&t))}}),ht._evalUrl=function(t){return ht.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},ht.fn.extend({wrapAll:function(t){if(ht.isFunction(t))return this.each(function(e){ht(this).wrapAll(t.call(this,e))});if(this[0]){var e=ht(t,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstChild&&1===t.firstChild.nodeType;)t=t.firstChild;return t}).append(this)}return this},wrapInner:function(t){return ht.isFunction(t)?this.each(function(e){ht(this).wrapInner(t.call(this,e))}):this.each(function(){var e=ht(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)})},wrap:function(t){var e=ht.isFunction(t);return this.each(function(n){ht(this).wrapAll(e?t.call(this,n):t)})},unwrap:function(){return this.parent().each(function(){ht.nodeName(this,"body")||ht(this).replaceWith(this.childNodes)}).end()}}),ht.expr.filters.hidden=function(t){return ft.reliableHiddenOffsets()?t.offsetWidth<=0&&t.offsetHeight<=0&&!t.getClientRects().length:J(t)},ht.expr.filters.visible=function(t){return!ht.expr.filters.hidden(t)};var nn=/%20/g,rn=/\[\]$/,on=/\r?\n/g,sn=/^(?:submit|button|image|reset|file)$/i,an=/^(?:input|select|textarea|keygen)/i;ht.param=function(t,e){var n,i=[],r=function(t,e){e=ht.isFunction(e)?e():null==e?"":e,i[i.length]=encodeURIComponent(t)+"="+encodeURIComponent(e)};if(void 0===e&&(e=ht.ajaxSettings&&ht.ajaxSettings.traditional),ht.isArray(t)||t.jquery&&!ht.isPlainObject(t))ht.each(t,function(){r(this.name,this.value)});else for(n in t)K(n,t[n],e,r);return i.join("&").replace(nn,"+")},ht.fn.extend({serialize:function(){return ht.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=ht.prop(this,"elements");return t?ht.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!ht(this).is(":disabled")&&an.test(this.nodeName)&&!sn.test(t)&&(this.checked||!Ft.test(t))}).map(function(t,e){var n=ht(this).val();return null==n?null:ht.isArray(n)?ht.map(n,function(t){return{name:e.name,value:t.replace(on,"\r\n")}}):{name:e.name,value:n.replace(on,"\r\n")}}).get()}}),ht.ajaxSettings.xhr=void 0!==t.ActiveXObject?function(){return this.isLocal?tt():it.documentMode>8?Z():/^(get|post|head|put|delete|options)$/i.test(this.type)&&Z()||tt()}:Z;var ln=0,un={},cn=ht.ajaxSettings.xhr();t.attachEvent&&t.attachEvent("onunload",function(){for(var t in un)un[t](void 0,!0)}),ft.cors=!!cn&&"withCredentials"in cn,cn=ft.ajax=!!cn,cn&&ht.ajaxTransport(function(e){if(!e.crossDomain||ft.cors){var n;return{send:function(i,r){var o,s=e.xhr(),a=++ln;if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(o in e.xhrFields)s[o]=e.xhrFields[o];e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest");for(o in i)void 0!==i[o]&&s.setRequestHeader(o,i[o]+"");s.send(e.hasContent&&e.data||null),n=function(t,i){var o,l,u;if(n&&(i||4===s.readyState))if(delete un[a],n=void 0,s.onreadystatechange=ht.noop,i)4!==s.readyState&&s.abort();else{u={},o=s.status,"string"==typeof s.responseText&&(u.text=s.responseText);try{l=s.statusText}catch(c){l=""}o||!e.isLocal||e.crossDomain?1223===o&&(o=204):o=u.text?200:404}u&&r(o,l,u,s.getAllResponseHeaders())},e.async?4===s.readyState?t.setTimeout(n):s.onreadystatechange=un[a]=n:n()},abort:function(){n&&n(void 0,!0)}}}}),ht.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return ht.globalEval(t),t}}}),ht.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET",t.global=!1)}),ht.ajaxTransport("script",function(t){if(t.crossDomain){var e,n=it.head||ht("head")[0]||it.documentElement;return{send:function(i,r){e=it.createElement("script"),e.async=!0,t.scriptCharset&&(e.charset=t.scriptCharset),e.src=t.url,e.onload=e.onreadystatechange=function(t,n){(n||!e.readyState||/loaded|complete/.test(e.readyState))&&(e.onload=e.onreadystatechange=null,e.parentNode&&e.parentNode.removeChild(e),e=null,n||r(200,"success"))},n.insertBefore(e,n.firstChild)},abort:function(){e&&e.onload(void 0,!0)}}}});var fn=[],dn=/(=)\?(?=&|$)|\?\?/;ht.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=fn.pop()||ht.expando+"_"+Me++;return this[t]=!0,t}}),ht.ajaxPrefilter("json jsonp",function(e,n,i){var r,o,s,a=e.jsonp!==!1&&(dn.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&dn.test(e.data)&&"data");return a||"jsonp"===e.dataTypes[0]?(r=e.jsonpCallback=ht.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(dn,"$1"+r):e.jsonp!==!1&&(e.url+=(Pe.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return s||ht.error(r+" was not called"),s[0]},e.dataTypes[0]="json",o=t[r],t[r]=function(){s=arguments},i.always(function(){void 0===o?ht(t).removeProp(r):t[r]=o,e[r]&&(e.jsonpCallback=n.jsonpCallback,fn.push(r)),s&&ht.isFunction(o)&&o(s[0]),s=o=void 0}),"script"):void 0}),ht.parseHTML=function(t,e,n){if(!t||"string"!=typeof t)return null;"boolean"==typeof e&&(n=e,e=!1),e=e||it;var i=wt.exec(t),r=!n&&[];return i?[e.createElement(i[1])]:(i=v([t],e,r),r&&r.length&&ht(r).remove(),ht.merge([],i.childNodes))};var hn=ht.fn.load;ht.fn.load=function(t,e,n){if("string"!=typeof t&&hn)return hn.apply(this,arguments);var i,r,o,s=this,a=t.indexOf(" ");return a>-1&&(i=ht.trim(t.slice(a,t.length)),t=t.slice(0,a)),ht.isFunction(e)?(n=e,e=void 0):e&&"object"==typeof e&&(r="POST"),s.length>0&&ht.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){o=arguments,s.html(i?ht("<div>").append(ht.parseHTML(t)).find(i):t)}).always(n&&function(t,e){s.each(function(){n.apply(this,o||[t.responseText,e,t])})}),this},ht.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){ht.fn[e]=function(t){return this.on(e,t)}}),ht.expr.filters.animated=function(t){return ht.grep(ht.timers,function(e){return t===e.elem}).length},ht.offset={setOffset:function(t,e,n){var i,r,o,s,a,l,u,c=ht.css(t,"position"),f=ht(t),d={};"static"===c&&(t.style.position="relative"),a=f.offset(),o=ht.css(t,"top"),l=ht.css(t,"left"),u=("absolute"===c||"fixed"===c)&&ht.inArray("auto",[o,l])>-1,u?(i=f.position(),s=i.top,r=i.left):(s=parseFloat(o)||0,r=parseFloat(l)||0),ht.isFunction(e)&&(e=e.call(t,n,ht.extend({},a))),null!=e.top&&(d.top=e.top-a.top+s),null!=e.left&&(d.left=e.left-a.left+r),"using"in e?e.using.call(t,d):f.css(d)}},ht.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){ht.offset.setOffset(this,t,e)});var e,n,i={top:0,left:0},r=this[0],o=r&&r.ownerDocument;return o?(e=o.documentElement,ht.contains(e,r)?("undefined"!=typeof r.getBoundingClientRect&&(i=r.getBoundingClientRect()),n=et(o),{top:i.top+(n.pageYOffset||e.scrollTop)-(e.clientTop||0),left:i.left+(n.pageXOffset||e.scrollLeft)-(e.clientLeft||0)}):i):void 0},position:function(){if(this[0]){var t,e,n={top:0,left:0},i=this[0];return"fixed"===ht.css(i,"position")?e=i.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),ht.nodeName(t[0],"html")||(n=t.offset()),n.top+=ht.css(t[0],"borderTopWidth",!0),n.left+=ht.css(t[0],"borderLeftWidth",!0)),{top:e.top-n.top-ht.css(i,"marginTop",!0),
left:e.left-n.left-ht.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&!ht.nodeName(t,"html")&&"static"===ht.css(t,"position");)t=t.offsetParent;return t||he})}}),ht.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var n=/Y/.test(e);ht.fn[t]=function(i){return Wt(this,function(t,i,r){var o=et(t);return void 0===r?o?e in o?o[e]:o.document.documentElement[i]:t[i]:void(o?o.scrollTo(n?ht(o).scrollLeft():r,n?r:ht(o).scrollTop()):t[i]=r)},t,i,arguments.length,null)}}),ht.each(["top","left"],function(t,e){ht.cssHooks[e]=A(ft.pixelPosition,function(t,n){return n?(n=me(t,e),fe.test(n)?ht(t).position()[e]+"px":n):void 0})}),ht.each({Height:"height",Width:"width"},function(t,e){ht.each({padding:"inner"+t,content:e,"":"outer"+t},function(n,i){ht.fn[i]=function(i,r){var o=arguments.length&&(n||"boolean"!=typeof i),s=n||(i===!0||r===!0?"margin":"border");return Wt(this,function(e,n,i){var r;return ht.isWindow(e)?e.document.documentElement["client"+t]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+t],r["scroll"+t],e.body["offset"+t],r["offset"+t],r["client"+t])):void 0===i?ht.css(e,n,s):ht.style(e,n,i,s)},e,o?i:void 0,o,null)}})}),ht.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,i){return this.on(e,t,n,i)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)}}),ht.fn.size=function(){return this.length},ht.fn.andSelf=ht.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return ht});var pn=t.jQuery,mn=t.$;return ht.noConflict=function(e){return t.$===ht&&(t.$=mn),e&&t.jQuery===ht&&(t.jQuery=pn),ht},e||(t.jQuery=t.$=ht),ht}),function(t){"use strict";var e=t.jCarousel={};e.version="0.3.4";var n=/^([+\-]=)?(.+)$/;e.parseTarget=function(t){var e=!1,i="object"!=typeof t?n.exec(t):null;return i?(t=parseInt(i[2],10)||0,i[1]&&(e=!0,"-="===i[1]&&(t*=-1))):"object"!=typeof t&&(t=parseInt(t,10)||0),{target:t,relative:e}},e.detectCarousel=function(t){for(var e;t.length>0;){if(e=t.filter("[data-jcarousel]"),e.length>0)return e;if(e=t.find("[data-jcarousel]"),e.length>0)return e;t=t.parent()}return null},e.base=function(n){return{version:e.version,_options:{},_element:null,_carousel:null,_init:t.noop,_create:t.noop,_destroy:t.noop,_reload:t.noop,create:function(){return this._element.attr("data-"+n.toLowerCase(),!0).data(n,this),!1===this._trigger("create")?this:(this._create(),this._trigger("createend"),this)},destroy:function(){return!1===this._trigger("destroy")?this:(this._destroy(),this._trigger("destroyend"),this._element.removeData(n).removeAttr("data-"+n.toLowerCase()),this)},reload:function(t){return!1===this._trigger("reload")?this:(t&&this.options(t),this._reload(),this._trigger("reloadend"),this)},element:function(){return this._element},options:function(e,n){if(0===arguments.length)return t.extend({},this._options);if("string"==typeof e){if("undefined"==typeof n)return"undefined"==typeof this._options[e]?null:this._options[e];this._options[e]=n}else this._options=t.extend({},this._options,e);return this},carousel:function(){return this._carousel||(this._carousel=e.detectCarousel(this.options("carousel")||this._element),this._carousel||t.error('Could not detect carousel for plugin "'+n+'"')),this._carousel},_trigger:function(e,i,r){var o,s=!1;return r=[this].concat(r||[]),(i||this._element).each(function(){o=t.Event((n+":"+e).toLowerCase()),t(this).trigger(o,r),o.isDefaultPrevented()&&(s=!0)}),!s}}},e.plugin=function(n,i){var r=t[n]=function(e,n){this._element=t(e),this.options(n),this._init(),this.create()};return r.fn=r.prototype=t.extend({},e.base(n),i),t.fn[n]=function(e){var i=Array.prototype.slice.call(arguments,1),o=this;return"string"==typeof e?this.each(function(){var r=t(this).data(n);if(!r)return t.error("Cannot call methods on "+n+' prior to initialization; attempted to call method "'+e+'"');if(!t.isFunction(r[e])||"_"===e.charAt(0))return t.error('No such method "'+e+'" for '+n+" instance");var s=r[e].apply(r,i);return s!==r&&"undefined"!=typeof s?(o=s,!1):void 0}):this.each(function(){var i=t(this).data(n);i instanceof r?i.reload(e):new r(this,e)}),o},r}}(jQuery),function(t,e){"use strict";var n=function(t){return parseFloat(t)||0};t.jCarousel.plugin("jcarousel",{animating:!1,tail:0,inTail:!1,resizeTimer:null,lt:null,vertical:!1,rtl:!1,circular:!1,underflow:!1,relative:!1,_options:{list:function(){return this.element().children().eq(0)},items:function(){return this.list().children()},animation:400,transitions:!1,wrap:null,vertical:null,rtl:null,center:!1},_list:null,_items:null,_target:t(),_first:t(),_last:t(),_visible:t(),_fullyvisible:t(),_init:function(){var t=this;return this.onWindowResize=function(){t.resizeTimer&&clearTimeout(t.resizeTimer),t.resizeTimer=setTimeout(function(){t.reload()},100)},this},_create:function(){this._reload(),t(e).on("resize.jcarousel",this.onWindowResize)},_destroy:function(){t(e).off("resize.jcarousel",this.onWindowResize)},_reload:function(){this.vertical=this.options("vertical"),null==this.vertical&&(this.vertical=this.list().height()>this.list().width()),this.rtl=this.options("rtl"),null==this.rtl&&(this.rtl=function(e){if("rtl"===(""+e.attr("dir")).toLowerCase())return!0;var n=!1;return e.parents("[dir]").each(function(){return/rtl/i.test(t(this).attr("dir"))?(n=!0,!1):void 0}),n}(this._element)),this.lt=this.vertical?"top":"left",this.relative="relative"===this.list().css("position"),this._list=null,this._items=null;var e=this.index(this._target)>=0?this._target:this.closest();this.circular="circular"===this.options("wrap"),this.underflow=!1;var n={left:0,top:0};return e.length>0&&(this._prepare(e),this.list().find("[data-jcarousel-clone]").remove(),this._items=null,this.underflow=this._fullyvisible.length>=this.items().length,this.circular=this.circular&&!this.underflow,n[this.lt]=this._position(e)+"px"),this.move(n),this},list:function(){if(null===this._list){var e=this.options("list");this._list=t.isFunction(e)?e.call(this):this._element.find(e)}return this._list},items:function(){if(null===this._items){var e=this.options("items");this._items=(t.isFunction(e)?e.call(this):this.list().find(e)).not("[data-jcarousel-clone]")}return this._items},index:function(t){return this.items().index(t)},closest:function(){var e,i=this,r=this.list().position()[this.lt],o=t(),s=!1,a=this.vertical?"bottom":this.rtl&&!this.relative?"left":"right";return this.rtl&&this.relative&&!this.vertical&&(r+=this.list().width()-this.clipping()),this.items().each(function(){if(o=t(this),s)return!1;var l=i.dimension(o);if(r+=l,r>=0){if(e=l-n(o.css("margin-"+a)),!(Math.abs(r)-l+e/2<=0))return!1;s=!0}}),o},target:function(){return this._target},first:function(){return this._first},last:function(){return this._last},visible:function(){return this._visible},fullyvisible:function(){return this._fullyvisible},hasNext:function(){if(!1===this._trigger("hasnext"))return!0;var t=this.options("wrap"),e=this.items().length-1,n=this.options("center")?this._target:this._last;return!!(e>=0&&!this.underflow&&(t&&"first"!==t||this.index(n)<e||this.tail&&!this.inTail))},hasPrev:function(){if(!1===this._trigger("hasprev"))return!0;var t=this.options("wrap");return!!(this.items().length>0&&!this.underflow&&(t&&"last"!==t||this.index(this._first)>0||this.tail&&this.inTail))},clipping:function(){return this._element["inner"+(this.vertical?"Height":"Width")]()},dimension:function(t){return t["outer"+(this.vertical?"Height":"Width")](!0)},scroll:function(e,n,i){if(this.animating)return this;if(!1===this._trigger("scroll",null,[e,n]))return this;t.isFunction(n)&&(i=n,n=!0);var r=t.jCarousel.parseTarget(e);if(r.relative){var o,s,a,l,u,c,f,d,h=this.items().length-1,p=Math.abs(r.target),m=this.options("wrap");if(r.target>0){var g=this.index(this._last);if(g>=h&&this.tail)this.inTail?"both"===m||"last"===m?this._scroll(0,n,i):t.isFunction(i)&&i.call(this,!1):this._scrollTail(n,i);else if(o=this.index(this._target),this.underflow&&o===h&&("circular"===m||"both"===m||"last"===m)||!this.underflow&&g===h&&("both"===m||"last"===m))this._scroll(0,n,i);else if(a=o+p,this.circular&&a>h){for(d=h,u=this.items().get(-1);d++<a;)u=this.items().eq(0),c=this._visible.index(u)>=0,c&&u.after(u.clone(!0).attr("data-jcarousel-clone",!0)),this.list().append(u),c||(f={},f[this.lt]=this.dimension(u),this.moveBy(f)),this._items=null;this._scroll(u,n,i)}else this._scroll(Math.min(a,h),n,i)}else if(this.inTail)this._scroll(Math.max(this.index(this._first)-p+1,0),n,i);else if(s=this.index(this._first),o=this.index(this._target),l=this.underflow?o:s,a=l-p,0>=l&&(this.underflow&&"circular"===m||"both"===m||"first"===m))this._scroll(h,n,i);else if(this.circular&&0>a){for(d=a,u=this.items().get(0);d++<0;){u=this.items().eq(-1),c=this._visible.index(u)>=0,c&&u.after(u.clone(!0).attr("data-jcarousel-clone",!0)),this.list().prepend(u),this._items=null;var v=this.dimension(u);f={},f[this.lt]=-v,this.moveBy(f)}this._scroll(u,n,i)}else this._scroll(Math.max(a,0),n,i)}else this._scroll(r.target,n,i);return this._trigger("scrollend"),this},moveBy:function(t,e){var i=this.list().position(),r=1,o=0;return this.rtl&&!this.vertical&&(r=-1,this.relative&&(o=this.list().width()-this.clipping())),t.left&&(t.left=i.left+o+n(t.left)*r+"px"),t.top&&(t.top=i.top+o+n(t.top)*r+"px"),this.move(t,e)},move:function(e,n){n=n||{};var i=this.options("transitions"),r=!!i,o=!!i.transforms,s=!!i.transforms3d,a=n.duration||0,l=this.list();if(!r&&a>0)return void l.animate(e,n);var u=n.complete||t.noop,c={};if(r){var f={transitionDuration:l.css("transitionDuration"),transitionTimingFunction:l.css("transitionTimingFunction"),transitionProperty:l.css("transitionProperty")},d=u;u=function(){t(this).css(f),d.call(this)},c={transitionDuration:(a>0?a/1e3:0)+"s",transitionTimingFunction:i.easing||n.easing,transitionProperty:a>0?function(){return o||s?"all":e.left?"left":"top"}():"none",transform:"none"}}s?c.transform="translate3d("+(e.left||0)+","+(e.top||0)+",0)":o?c.transform="translate("+(e.left||0)+","+(e.top||0)+")":t.extend(c,e),r&&a>0&&l.one("transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd",u),l.css(c),0>=a&&l.each(function(){u.call(this)})},_scroll:function(e,n,i){if(this.animating)return t.isFunction(i)&&i.call(this,!1),this;if("object"!=typeof e?e=this.items().eq(e):"undefined"==typeof e.jquery&&(e=t(e)),0===e.length)return t.isFunction(i)&&i.call(this,!1),this;this.inTail=!1,this._prepare(e);var r=this._position(e),o=this.list().position()[this.lt];if(r===o)return t.isFunction(i)&&i.call(this,!1),this;var s={};return s[this.lt]=r+"px",this._animate(s,n,i),this},_scrollTail:function(e,n){if(this.animating||!this.tail)return t.isFunction(n)&&n.call(this,!1),this;var i=this.list().position()[this.lt];this.rtl&&this.relative&&!this.vertical&&(i+=this.list().width()-this.clipping()),this.rtl&&!this.vertical?i+=this.tail:i-=this.tail,this.inTail=!0;var r={};return r[this.lt]=i+"px",this._update({target:this._target.next(),fullyvisible:this._fullyvisible.slice(1).add(this._visible.last())}),this._animate(r,e,n),this},_animate:function(e,n,i){if(i=i||t.noop,!1===this._trigger("animate"))return i.call(this,!1),this;this.animating=!0;var r=this.options("animation"),o=t.proxy(function(){this.animating=!1;var t=this.list().find("[data-jcarousel-clone]");t.length>0&&(t.remove(),this._reload()),this._trigger("animateend"),i.call(this,!0)},this),s="object"==typeof r?t.extend({},r):{duration:r},a=s.complete||t.noop;return n===!1?s.duration=0:"undefined"!=typeof t.fx.speeds[s.duration]&&(s.duration=t.fx.speeds[s.duration]),s.complete=function(){o(),a.call(this)},this.move(e,s),this},_prepare:function(e){var i,r,o,s,a=this.index(e),l=a,u=this.dimension(e),c=this.clipping(),f=this.vertical?"bottom":this.rtl?"left":"right",d=this.options("center"),h={target:e,first:e,last:e,visible:e,fullyvisible:c>=u?e:t()};if(d&&(u/=2,c/=2),c>u)for(;;){if(i=this.items().eq(++l),0===i.length){if(!this.circular)break;if(i=this.items().eq(0),e.get(0)===i.get(0))break;if(r=this._visible.index(i)>=0,r&&i.after(i.clone(!0).attr("data-jcarousel-clone",!0)),this.list().append(i),!r){var p={};p[this.lt]=this.dimension(i),this.moveBy(p)}this._items=null}if(s=this.dimension(i),0===s)break;if(u+=s,h.last=i,h.visible=h.visible.add(i),o=n(i.css("margin-"+f)),c>=u-o&&(h.fullyvisible=h.fullyvisible.add(i)),u>=c)break}if(!this.circular&&!d&&c>u)for(l=a;;){if(--l<0)break;if(i=this.items().eq(l),0===i.length)break;if(s=this.dimension(i),0===s)break;if(u+=s,h.first=i,h.visible=h.visible.add(i),o=n(i.css("margin-"+f)),c>=u-o&&(h.fullyvisible=h.fullyvisible.add(i)),u>=c)break}return this._update(h),this.tail=0,d||"circular"===this.options("wrap")||"custom"===this.options("wrap")||this.index(h.last)!==this.items().length-1||(u-=n(h.last.css("margin-"+f)),u>c&&(this.tail=u-c)),this},_position:function(t){var e=this._first,n=e.position()[this.lt],i=this.options("center"),r=i?this.clipping()/2-this.dimension(e)/2:0;return this.rtl&&!this.vertical?(n-=this.relative?this.list().width()-this.dimension(e):this.clipping()-this.dimension(e),n+=r):n-=r,!i&&(this.index(t)>this.index(e)||this.inTail)&&this.tail?(n=this.rtl&&!this.vertical?n-this.tail:n+this.tail,this.inTail=!0):this.inTail=!1,-n},_update:function(e){var n,i=this,r={target:this._target,first:this._first,last:this._last,visible:this._visible,fullyvisible:this._fullyvisible},o=this.index(e.first||r.first)<this.index(r.first),s=function(n){var s=[],a=[];e[n].each(function(){r[n].index(this)<0&&s.push(this)}),r[n].each(function(){e[n].index(this)<0&&a.push(this)}),o?s=s.reverse():a=a.reverse(),i._trigger(n+"in",t(s)),i._trigger(n+"out",t(a)),i["_"+n]=e[n]};for(n in e)s(n);return this}})}(jQuery,window),function(t){"use strict";t.jcarousel.fn.scrollIntoView=function(e,n,i){var r,o=t.jCarousel.parseTarget(e),s=this.index(this._fullyvisible.first()),a=this.index(this._fullyvisible.last());if(r=o.relative?o.target<0?Math.max(0,s+o.target):a+o.target:"object"!=typeof o.target?o.target:this.index(o.target),s>r)return this.scroll(r,n,i);if(r>=s&&a>=r)return t.isFunction(i)&&i.call(this,!1),this;for(var l,u=this.items(),c=this.clipping(),f=this.vertical?"bottom":this.rtl?"left":"right",d=0;;){if(l=u.eq(r),0===l.length)break;if(d+=this.dimension(l),d>=c){var h=parseFloat(l.css("margin-"+f))||0;d-h!==c&&r++;break}if(0>=r)break;r--}return this.scroll(r,n,i)}}(jQuery),function(t){"use strict";t.jCarousel.plugin("jcarouselControl",{_options:{target:"+=1",event:"click",method:"scroll"},_active:null,_init:function(){this.onDestroy=t.proxy(function(){this._destroy(),this.carousel().one("jcarousel:createend",t.proxy(this._create,this))},this),this.onReload=t.proxy(this._reload,this),this.onEvent=t.proxy(function(e){e.preventDefault();var n=this.options("method");t.isFunction(n)?n.call(this):this.carousel().jcarousel(this.options("method"),this.options("target"))},this)},_create:function(){this.carousel().one("jcarousel:destroy",this.onDestroy).on("jcarousel:reloadend jcarousel:scrollend",this.onReload),this._element.on(this.options("event")+".jcarouselcontrol",this.onEvent),this._reload()},_destroy:function(){this._element.off(".jcarouselcontrol",this.onEvent),this.carousel().off("jcarousel:destroy",this.onDestroy).off("jcarousel:reloadend jcarousel:scrollend",this.onReload)},_reload:function(){var e,n=t.jCarousel.parseTarget(this.options("target")),i=this.carousel();if(n.relative)e=i.jcarousel(n.target>0?"hasNext":"hasPrev");else{var r="object"!=typeof n.target?i.jcarousel("items").eq(n.target):n.target;e=i.jcarousel("target").index(r)>=0}return this._active!==e&&(this._trigger(e?"active":"inactive"),this._active=e),this}})}(jQuery),function(t){"use strict";t.jCarousel.plugin("jcarouselPagination",{_options:{perPage:null,item:function(t){return'<a href="#'+t+'">'+t+"</a>"},event:"click",method:"scroll"},_carouselItems:null,_pages:{},_items:{},_currentPage:null,_init:function(){this.onDestroy=t.proxy(function(){this._destroy(),this.carousel().one("jcarousel:createend",t.proxy(this._create,this))},this),this.onReload=t.proxy(this._reload,this),this.onScroll=t.proxy(this._update,this)},_create:function(){this.carousel().one("jcarousel:destroy",this.onDestroy).on("jcarousel:reloadend",this.onReload).on("jcarousel:scrollend",this.onScroll),this._reload()},_destroy:function(){this._clear(),this.carousel().off("jcarousel:destroy",this.onDestroy).off("jcarousel:reloadend",this.onReload).off("jcarousel:scrollend",this.onScroll),this._carouselItems=null},_reload:function(){var e=this.options("perPage");if(this._pages={},this._items={},t.isFunction(e)&&(e=e.call(this)),null==e)this._pages=this._calculatePages();else for(var n,i=parseInt(e,10)||0,r=this._getCarouselItems(),o=1,s=0;;){if(n=r.eq(s++),0===n.length)break;this._pages[o]?this._pages[o]=this._pages[o].add(n):this._pages[o]=n,s%i===0&&o++}this._clear();var a=this,l=this.carousel().data("jcarousel"),u=this._element,c=this.options("item"),f=this._getCarouselItems().length;t.each(this._pages,function(e,n){var i=a._items[e]=t(c.call(a,e,n));i.on(a.options("event")+".jcarouselpagination",t.proxy(function(){var t=n.eq(0);if(l.circular){var i=l.index(l.target()),r=l.index(t);parseFloat(e)>parseFloat(a._currentPage)?i>r&&(t="+="+(f-i+r)):r>i&&(t="-="+(i+(f-r)))}l[this.options("method")](t)},a)),u.append(i)}),this._update()},_update:function(){var e,n=this.carousel().jcarousel("target");t.each(this._pages,function(t,i){return i.each(function(){return n.is(this)?(e=t,!1):void 0}),e?!1:void 0}),this._currentPage!==e&&(this._trigger("inactive",this._items[this._currentPage]),this._trigger("active",this._items[e])),this._currentPage=e},items:function(){return this._items},reloadCarouselItems:function(){return this._carouselItems=null,this},_clear:function(){this._element.empty(),this._currentPage=null},_calculatePages:function(){for(var t,e,n=this.carousel().data("jcarousel"),i=this._getCarouselItems(),r=n.clipping(),o=0,s=0,a=1,l={};;){if(t=i.eq(s++),0===t.length)break;e=n.dimension(t),o+e>r&&(a++,o=0),o+=e,l[a]?l[a]=l[a].add(t):l[a]=t}return l},_getCarouselItems:function(){return this._carouselItems||(this._carouselItems=this.carousel().jcarousel("items")),this._carouselItems}})}(jQuery),function(t,e){"use strict";var n,i,r={hidden:"visibilitychange",mozHidden:"mozvisibilitychange",msHidden:"msvisibilitychange",webkitHidden:"webkitvisibilitychange"};t.each(r,function(t,r){return"undefined"!=typeof e[t]?(n=t,i=r,!1):void 0}),t.jCarousel.plugin("jcarouselAutoscroll",{_options:{target:"+=1",interval:3e3,autostart:!0},_timer:null,_started:!1,_init:function(){this.onDestroy=t.proxy(function(){this._destroy(),this.carousel().one("jcarousel:createend",t.proxy(this._create,this))},this),this.onAnimateEnd=t.proxy(this._start,this),this.onVisibilityChange=t.proxy(function(){e[n]?this._stop():this._start()},this)},_create:function(){this.carousel().one("jcarousel:destroy",this.onDestroy),t(e).on(i,this.onVisibilityChange),this.options("autostart")&&this.start()},_destroy:function(){this._stop(),this.carousel().off("jcarousel:destroy",this.onDestroy),t(e).off(i,this.onVisibilityChange)},_start:function(){return this._stop(),this._started?(this.carousel().one("jcarousel:animateend",this.onAnimateEnd),this._timer=setTimeout(t.proxy(function(){this.carousel().jcarousel("scroll",this.options("target"))},this),this.options("interval")),this):void 0},_stop:function(){return this._timer&&(this._timer=clearTimeout(this._timer)),this.carousel().off("jcarousel:animateend",this.onAnimateEnd),this},start:function(){return this._started=!0,this._start(),this},stop:function(){return this._started=!1,this._stop(),this}})}(jQuery,document),function(t){t(function(){t(".jcarousel").jcarousel(),t(".jcarousel-control-prev").on("jcarouselcontrol:active",function(){t(this).removeClass("inactive")}).on("jcarouselcontrol:inactive",function(){t(this).addClass("inactive")}).on("click",function(t){t.preventDefault()}).jcarouselControl({target:"-=1"}),t(".jcarousel-control-next").on("jcarouselcontrol:active",function(){t(this).removeClass("inactive")}).on("jcarouselcontrol:inactive",function(){t(this).addClass("inactive")}).on("click",function(t){t.preventDefault()}).jcarouselControl({target:"+=1"}),t(".jcarousel-pagination").on("jcarouselpagination:active","a",function(e){t(this).addClass("active")}).on("jcarouselpagination:inactive","a",function(e){t(this).removeClass("active")}).on("click",function(t){t.preventDefault()}).jcarouselPagination({perPage:1,item:function(t){return'<a href="#'+t+'">'+t+"</a>"}})})}(jQuery),function(t){function e(){}function n(t){function n(e){e.prototype.option||(e.prototype.option=function(e){t.isPlainObject(e)&&(this.options=t.extend(!0,this.options,e))})}function r(e,n){t.fn[e]=function(r){if("string"==typeof r){for(var s=i.call(arguments,1),a=0,l=this.length;l>a;a++){var u=this[a],c=t.data(u,e);if(c)if(t.isFunction(c[r])&&"_"!==r.charAt(0)){var f=c[r].apply(c,s);if(void 0!==f)return f}else o("no such method '"+r+"' for "+e+" instance");else o("cannot call methods on "+e+" prior to initialization; attempted to call '"+r+"'")}return this}return this.each(function(){var i=t.data(this,e);i?(i.option(r),i._init()):(i=new n(this,r),t.data(this,e,i))})}}if(t){var o="undefined"==typeof console?e:function(t){console.error(t)};return t.bridget=function(t,e){n(e),r(t,e)},t.bridget}}var i=Array.prototype.slice;"function"==typeof define&&define.amd?define("jquery-bridget/jquery.bridget",["jquery"],n):n("object"==typeof exports?require("jquery"):t.jQuery)}(window),function(t){function e(e){var n=t.event;return n.target=n.target||n.srcElement||e,n}var n=document.documentElement,i=function(){};n.addEventListener?i=function(t,e,n){t.addEventListener(e,n,!1)}:n.attachEvent&&(i=function(t,n,i){t[n+i]=i.handleEvent?function(){var n=e(t);i.handleEvent.call(i,n)}:function(){var n=e(t);i.call(t,n)},t.attachEvent("on"+n,t[n+i])});var r=function(){};n.removeEventListener?r=function(t,e,n){t.removeEventListener(e,n,!1)}:n.detachEvent&&(r=function(t,e,n){t.detachEvent("on"+e,t[e+n]);try{delete t[e+n]}catch(i){t[e+n]=void 0}});var o={bind:i,unbind:r};"function"==typeof define&&define.amd?define("eventie/eventie",o):"object"==typeof exports?module.exports=o:t.eventie=o}(window),function(){function t(){}function e(t,e){for(var n=t.length;n--;)if(t[n].listener===e)return n;return-1}function n(t){return function(){return this[t].apply(this,arguments)}}var i=t.prototype,r=this,o=r.EventEmitter;i.getListeners=function(t){var e,n,i=this._getEvents();if(t instanceof RegExp){e={};for(n in i)i.hasOwnProperty(n)&&t.test(n)&&(e[n]=i[n])}else e=i[t]||(i[t]=[]);return e},i.flattenListeners=function(t){var e,n=[];for(e=0;e<t.length;e+=1)n.push(t[e].listener);return n},i.getListenersAsObject=function(t){var e,n=this.getListeners(t);return n instanceof Array&&(e={},e[t]=n),e||n},i.addListener=function(t,n){var i,r=this.getListenersAsObject(t),o="object"==typeof n;for(i in r)r.hasOwnProperty(i)&&-1===e(r[i],n)&&r[i].push(o?n:{listener:n,once:!1});return this},i.on=n("addListener"),i.addOnceListener=function(t,e){return this.addListener(t,{listener:e,once:!0})},i.once=n("addOnceListener"),i.defineEvent=function(t){return this.getListeners(t),this},i.defineEvents=function(t){for(var e=0;e<t.length;e+=1)this.defineEvent(t[e]);return this},i.removeListener=function(t,n){var i,r,o=this.getListenersAsObject(t);for(r in o)o.hasOwnProperty(r)&&(i=e(o[r],n),-1!==i&&o[r].splice(i,1));return this},i.off=n("removeListener"),i.addListeners=function(t,e){return this.manipulateListeners(!1,t,e)},i.removeListeners=function(t,e){return this.manipulateListeners(!0,t,e)},i.manipulateListeners=function(t,e,n){var i,r,o=t?this.removeListener:this.addListener,s=t?this.removeListeners:this.addListeners;if("object"!=typeof e||e instanceof RegExp)for(i=n.length;i--;)o.call(this,e,n[i]);else for(i in e)e.hasOwnProperty(i)&&(r=e[i])&&("function"==typeof r?o.call(this,i,r):s.call(this,i,r));return this},i.removeEvent=function(t){var e,n=typeof t,i=this._getEvents();if("string"===n)delete i[t];else if(t instanceof RegExp)for(e in i)i.hasOwnProperty(e)&&t.test(e)&&delete i[e];else delete this._events;return this},i.removeAllListeners=n("removeEvent"),i.emitEvent=function(t,e){var n,i,r,o,s=this.getListenersAsObject(t);for(r in s)if(s.hasOwnProperty(r))for(i=s[r].length;i--;)n=s[r][i],n.once===!0&&this.removeListener(t,n.listener),o=n.listener.apply(this,e||[]),o===this._getOnceReturnValue()&&this.removeListener(t,n.listener);return this},i.trigger=n("emitEvent"),i.emit=function(t){var e=Array.prototype.slice.call(arguments,1);return this.emitEvent(t,e)},i.setOnceReturnValue=function(t){return this._onceReturnValue=t,this},i._getOnceReturnValue=function(){return this.hasOwnProperty("_onceReturnValue")?this._onceReturnValue:!0},i._getEvents=function(){return this._events||(this._events={})},t.noConflict=function(){return r.EventEmitter=o,t},"function"==typeof define&&define.amd?define("eventEmitter/EventEmitter",[],function(){return t}):"object"==typeof module&&module.exports?module.exports=t:r.EventEmitter=t}.call(this),function(t){function e(t){if(t){if("string"==typeof i[t])return t;t=t.charAt(0).toUpperCase()+t.slice(1);for(var e,r=0,o=n.length;o>r;r++)if(e=n[r]+t,"string"==typeof i[e])return e}}var n="Webkit Moz ms Ms O".split(" "),i=document.documentElement.style;"function"==typeof define&&define.amd?define("get-style-property/get-style-property",[],function(){return e}):"object"==typeof exports?module.exports=e:t.getStyleProperty=e}(window),function(t,e){function n(t){var e=parseFloat(t),n=-1===t.indexOf("%")&&!isNaN(e);return n&&e}function i(){}function r(){for(var t={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},e=0,n=a.length;n>e;e++){var i=a[e];t[i]=0}return t}function o(e){function i(){if(!d){d=!0;var i=t.getComputedStyle;if(u=function(){var t=i?function(t){return i(t,null)}:function(t){return t.currentStyle};return function(e){var n=t(e);return n||s("Style returned "+n+". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"),n}}(),c=e("boxSizing")){var r=document.createElement("div");r.style.width="200px",r.style.padding="1px 2px 3px 4px",r.style.borderStyle="solid",r.style.borderWidth="1px 2px 3px 4px",r.style[c]="border-box";var o=document.body||document.documentElement;o.appendChild(r);var a=u(r);f=200===n(a.width),o.removeChild(r)}}}function o(t){if(i(),"string"==typeof t&&(t=document.querySelector(t)),t&&"object"==typeof t&&t.nodeType){var e=u(t);if("none"===e.display)return r();var o={};o.width=t.offsetWidth,o.height=t.offsetHeight;for(var s=o.isBorderBox=!(!c||!e[c]||"border-box"!==e[c]),d=0,h=a.length;h>d;d++){var p=a[d],m=e[p];m=l(t,m);var g=parseFloat(m);o[p]=isNaN(g)?0:g}var v=o.paddingLeft+o.paddingRight,y=o.paddingTop+o.paddingBottom,b=o.marginLeft+o.marginRight,x=o.marginTop+o.marginBottom,_=o.borderLeftWidth+o.borderRightWidth,w=o.borderTopWidth+o.borderBottomWidth,T=s&&f,E=n(e.width);E!==!1&&(o.width=E+(T?0:v+_));var C=n(e.height);return C!==!1&&(o.height=C+(T?0:y+w)),o.innerWidth=o.width-(v+_),o.innerHeight=o.height-(y+w),o.outerWidth=o.width+b,o.outerHeight=o.height+x,o}}function l(e,n){if(t.getComputedStyle||-1===n.indexOf("%"))return n;var i=e.style,r=i.left,o=e.runtimeStyle,s=o&&o.left;return s&&(o.left=e.currentStyle.left),i.left=n,n=i.pixelLeft,i.left=r,s&&(o.left=s),n}var u,c,f,d=!1;return o}var s="undefined"==typeof console?i:function(t){console.error(t)},a=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"];"function"==typeof define&&define.amd?define("get-size/get-size",["get-style-property/get-style-property"],o):"object"==typeof exports?module.exports=o(require("desandro-get-style-property")):t.getSize=o(t.getStyleProperty)}(window),function(t){function e(t){"function"==typeof t&&(e.isReady?t():s.push(t))}function n(t){var n="readystatechange"===t.type&&"complete"!==o.readyState;e.isReady||n||i()}function i(){e.isReady=!0;for(var t=0,n=s.length;n>t;t++){var i=s[t];i()}}function r(r){return"complete"===o.readyState?i():(r.bind(o,"DOMContentLoaded",n),r.bind(o,"readystatechange",n),r.bind(t,"load",n)),e}var o=t.document,s=[];e.isReady=!1,"function"==typeof define&&define.amd?define("doc-ready/doc-ready",["eventie/eventie"],r):"object"==typeof exports?module.exports=r(require("eventie")):t.docReady=r(t.eventie)}(window),function(t){function e(t,e){return t[s](e)}function n(t){if(!t.parentNode){var e=document.createDocumentFragment();e.appendChild(t)}}function i(t,e){n(t);for(var i=t.parentNode.querySelectorAll(e),r=0,o=i.length;o>r;r++)if(i[r]===t)return!0;return!1}function r(t,i){return n(t),e(t,i)}var o,s=function(){if(t.matches)return"matches";if(t.matchesSelector)return"matchesSelector";for(var e=["webkit","moz","ms","o"],n=0,i=e.length;i>n;n++){var r=e[n],o=r+"MatchesSelector";if(t[o])return o}}();if(s){var a=document.createElement("div"),l=e(a,"div");o=l?e:r}else o=i;"function"==typeof define&&define.amd?define("matches-selector/matches-selector",[],function(){return o}):"object"==typeof exports?module.exports=o:window.matchesSelector=o}(Element.prototype),function(t,e){"function"==typeof define&&define.amd?define("fizzy-ui-utils/utils",["doc-ready/doc-ready","matches-selector/matches-selector"],function(n,i){return e(t,n,i)}):"object"==typeof exports?module.exports=e(t,require("doc-ready"),require("desandro-matches-selector")):t.fizzyUIUtils=e(t,t.docReady,t.matchesSelector)}(window,function(t,e,n){var i={};i.extend=function(t,e){for(var n in e)t[n]=e[n];return t},i.modulo=function(t,e){return(t%e+e)%e};var r=Object.prototype.toString;i.isArray=function(t){return"[object Array]"==r.call(t)},i.makeArray=function(t){var e=[];if(i.isArray(t))e=t;else if(t&&"number"==typeof t.length)for(var n=0,r=t.length;r>n;n++)e.push(t[n]);else e.push(t);return e},i.indexOf=Array.prototype.indexOf?function(t,e){return t.indexOf(e)}:function(t,e){for(var n=0,i=t.length;i>n;n++)if(t[n]===e)return n;return-1},i.removeFrom=function(t,e){var n=i.indexOf(t,e);-1!=n&&t.splice(n,1)},i.isElement="function"==typeof HTMLElement||"object"==typeof HTMLElement?function(t){return t instanceof HTMLElement}:function(t){return t&&"object"==typeof t&&1==t.nodeType&&"string"==typeof t.nodeName},i.setText=function(){function t(t,n){e=e||(void 0!==document.documentElement.textContent?"textContent":"innerText"),t[e]=n}var e;return t}(),i.getParent=function(t,e){for(;t!=document.body;)if(t=t.parentNode,n(t,e))return t},i.getQueryElement=function(t){return"string"==typeof t?document.querySelector(t):t},i.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},i.filterFindElements=function(t,e){t=i.makeArray(t);for(var r=[],o=0,s=t.length;s>o;o++){var a=t[o];if(i.isElement(a))if(e){n(a,e)&&r.push(a);for(var l=a.querySelectorAll(e),u=0,c=l.length;c>u;u++)r.push(l[u])}else r.push(a)}return r},i.debounceMethod=function(t,e,n){var i=t.prototype[e],r=e+"Timeout";t.prototype[e]=function(){var t=this[r];t&&clearTimeout(t);var e=arguments,o=this;this[r]=setTimeout(function(){i.apply(o,e),delete o[r]},n||100)}},i.toDashed=function(t){return t.replace(/(.)([A-Z])/g,function(t,e,n){return e+"-"+n}).toLowerCase()};var o=t.console;return i.htmlInit=function(n,r){e(function(){for(var e=i.toDashed(r),s=document.querySelectorAll(".js-"+e),a="data-"+e+"-options",l=0,u=s.length;u>l;l++){var c,f=s[l],d=f.getAttribute(a);try{c=d&&JSON.parse(d)}catch(h){o&&o.error("Error parsing "+a+" on "+f.nodeName.toLowerCase()+(f.id?"#"+f.id:"")+": "+h);continue}var p=new n(f,c),m=t.jQuery;m&&m.data(f,r,p)}})},i}),function(t,e){"function"==typeof define&&define.amd?define("outlayer/item",["eventEmitter/EventEmitter","get-size/get-size","get-style-property/get-style-property","fizzy-ui-utils/utils"],function(n,i,r,o){
return e(t,n,i,r,o)}):"object"==typeof exports?module.exports=e(t,require("wolfy87-eventemitter"),require("get-size"),require("desandro-get-style-property"),require("fizzy-ui-utils")):(t.Outlayer={},t.Outlayer.Item=e(t,t.EventEmitter,t.getSize,t.getStyleProperty,t.fizzyUIUtils))}(window,function(t,e,n,i,r){function o(t){for(var e in t)return!1;return e=null,!0}function s(t,e){t&&(this.element=t,this.layout=e,this.position={x:0,y:0},this._create())}function a(t){return t.replace(/([A-Z])/g,function(t){return"-"+t.toLowerCase()})}var l=t.getComputedStyle,u=l?function(t){return l(t,null)}:function(t){return t.currentStyle},c=i("transition"),f=i("transform"),d=c&&f,h=!!i("perspective"),p={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"otransitionend",transition:"transitionend"}[c],m=["transform","transition","transitionDuration","transitionProperty"],g=function(){for(var t={},e=0,n=m.length;n>e;e++){var r=m[e],o=i(r);o&&o!==r&&(t[r]=o)}return t}();r.extend(s.prototype,e.prototype),s.prototype._create=function(){this._transn={ingProperties:{},clean:{},onEnd:{}},this.css({position:"absolute"})},s.prototype.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},s.prototype.getSize=function(){this.size=n(this.element)},s.prototype.css=function(t){var e=this.element.style;for(var n in t){var i=g[n]||n;e[i]=t[n]}},s.prototype.getPosition=function(){var t=u(this.element),e=this.layout.options,n=e.isOriginLeft,i=e.isOriginTop,r=t[n?"left":"right"],o=t[i?"top":"bottom"],s=this.layout.size,a=-1!=r.indexOf("%")?parseFloat(r)/100*s.width:parseInt(r,10),l=-1!=o.indexOf("%")?parseFloat(o)/100*s.height:parseInt(o,10);a=isNaN(a)?0:a,l=isNaN(l)?0:l,a-=n?s.paddingLeft:s.paddingRight,l-=i?s.paddingTop:s.paddingBottom,this.position.x=a,this.position.y=l},s.prototype.layoutPosition=function(){var t=this.layout.size,e=this.layout.options,n={},i=e.isOriginLeft?"paddingLeft":"paddingRight",r=e.isOriginLeft?"left":"right",o=e.isOriginLeft?"right":"left",s=this.position.x+t[i];n[r]=this.getXValue(s),n[o]="";var a=e.isOriginTop?"paddingTop":"paddingBottom",l=e.isOriginTop?"top":"bottom",u=e.isOriginTop?"bottom":"top",c=this.position.y+t[a];n[l]=this.getYValue(c),n[u]="",this.css(n),this.emitEvent("layout",[this])},s.prototype.getXValue=function(t){var e=this.layout.options;return e.percentPosition&&!e.isHorizontal?t/this.layout.size.width*100+"%":t+"px"},s.prototype.getYValue=function(t){var e=this.layout.options;return e.percentPosition&&e.isHorizontal?t/this.layout.size.height*100+"%":t+"px"},s.prototype._transitionTo=function(t,e){this.getPosition();var n=this.position.x,i=this.position.y,r=parseInt(t,10),o=parseInt(e,10),s=r===this.position.x&&o===this.position.y;if(this.setPosition(t,e),s&&!this.isTransitioning)return void this.layoutPosition();var a=t-n,l=e-i,u={};u.transform=this.getTranslate(a,l),this.transition({to:u,onTransitionEnd:{transform:this.layoutPosition},isCleaning:!0})},s.prototype.getTranslate=function(t,e){var n=this.layout.options;return t=n.isOriginLeft?t:-t,e=n.isOriginTop?e:-e,h?"translate3d("+t+"px, "+e+"px, 0)":"translate("+t+"px, "+e+"px)"},s.prototype.goTo=function(t,e){this.setPosition(t,e),this.layoutPosition()},s.prototype.moveTo=d?s.prototype._transitionTo:s.prototype.goTo,s.prototype.setPosition=function(t,e){this.position.x=parseInt(t,10),this.position.y=parseInt(e,10)},s.prototype._nonTransition=function(t){this.css(t.to),t.isCleaning&&this._removeStyles(t.to);for(var e in t.onTransitionEnd)t.onTransitionEnd[e].call(this)},s.prototype._transition=function(t){if(!parseFloat(this.layout.options.transitionDuration))return void this._nonTransition(t);var e=this._transn;for(var n in t.onTransitionEnd)e.onEnd[n]=t.onTransitionEnd[n];for(n in t.to)e.ingProperties[n]=!0,t.isCleaning&&(e.clean[n]=!0);if(t.from){this.css(t.from);var i=this.element.offsetHeight;i=null}this.enableTransition(t.to),this.css(t.to),this.isTransitioning=!0};var v="opacity,"+a(g.transform||"transform");s.prototype.enableTransition=function(){this.isTransitioning||(this.css({transitionProperty:v,transitionDuration:this.layout.options.transitionDuration}),this.element.addEventListener(p,this,!1))},s.prototype.transition=s.prototype[c?"_transition":"_nonTransition"],s.prototype.onwebkitTransitionEnd=function(t){this.ontransitionend(t)},s.prototype.onotransitionend=function(t){this.ontransitionend(t)};var y={"-webkit-transform":"transform","-moz-transform":"transform","-o-transform":"transform"};s.prototype.ontransitionend=function(t){if(t.target===this.element){var e=this._transn,n=y[t.propertyName]||t.propertyName;if(delete e.ingProperties[n],o(e.ingProperties)&&this.disableTransition(),n in e.clean&&(this.element.style[t.propertyName]="",delete e.clean[n]),n in e.onEnd){var i=e.onEnd[n];i.call(this),delete e.onEnd[n]}this.emitEvent("transitionEnd",[this])}},s.prototype.disableTransition=function(){this.removeTransitionStyles(),this.element.removeEventListener(p,this,!1),this.isTransitioning=!1},s.prototype._removeStyles=function(t){var e={};for(var n in t)e[n]="";this.css(e)};var b={transitionProperty:"",transitionDuration:""};return s.prototype.removeTransitionStyles=function(){this.css(b)},s.prototype.removeElem=function(){this.element.parentNode.removeChild(this.element),this.css({display:""}),this.emitEvent("remove",[this])},s.prototype.remove=function(){if(!c||!parseFloat(this.layout.options.transitionDuration))return void this.removeElem();var t=this;this.once("transitionEnd",function(){t.removeElem()}),this.hide()},s.prototype.reveal=function(){delete this.isHidden,this.css({display:""});var t=this.layout.options,e={},n=this.getHideRevealTransitionEndProperty("visibleStyle");e[n]=this.onRevealTransitionEnd,this.transition({from:t.hiddenStyle,to:t.visibleStyle,isCleaning:!0,onTransitionEnd:e})},s.prototype.onRevealTransitionEnd=function(){this.isHidden||this.emitEvent("reveal")},s.prototype.getHideRevealTransitionEndProperty=function(t){var e=this.layout.options[t];if(e.opacity)return"opacity";for(var n in e)return n},s.prototype.hide=function(){this.isHidden=!0,this.css({display:""});var t=this.layout.options,e={},n=this.getHideRevealTransitionEndProperty("hiddenStyle");e[n]=this.onHideTransitionEnd,this.transition({from:t.visibleStyle,to:t.hiddenStyle,isCleaning:!0,onTransitionEnd:e})},s.prototype.onHideTransitionEnd=function(){this.isHidden&&(this.css({display:"none"}),this.emitEvent("hide"))},s.prototype.destroy=function(){this.css({position:"",left:"",right:"",top:"",bottom:"",transition:"",transform:""})},s}),function(t,e){"function"==typeof define&&define.amd?define("outlayer/outlayer",["eventie/eventie","eventEmitter/EventEmitter","get-size/get-size","fizzy-ui-utils/utils","./item"],function(n,i,r,o,s){return e(t,n,i,r,o,s)}):"object"==typeof exports?module.exports=e(t,require("eventie"),require("wolfy87-eventemitter"),require("get-size"),require("fizzy-ui-utils"),require("./item")):t.Outlayer=e(t,t.eventie,t.EventEmitter,t.getSize,t.fizzyUIUtils,t.Outlayer.Item)}(window,function(t,e,n,i,r,o){function s(t,e){var n=r.getQueryElement(t);if(!n)return void(a&&a.error("Bad element for "+this.constructor.namespace+": "+(n||t)));this.element=n,l&&(this.$element=l(this.element)),this.options=r.extend({},this.constructor.defaults),this.option(e);var i=++c;this.element.outlayerGUID=i,f[i]=this,this._create(),this.options.isInitLayout&&this.layout()}var a=t.console,l=t.jQuery,u=function(){},c=0,f={};return s.namespace="outlayer",s.Item=o,s.defaults={containerStyle:{position:"relative"},isInitLayout:!0,isOriginLeft:!0,isOriginTop:!0,isResizeBound:!0,isResizingContainer:!0,transitionDuration:"0.4s",hiddenStyle:{opacity:0,transform:"scale(0.001)"},visibleStyle:{opacity:1,transform:"scale(1)"}},r.extend(s.prototype,n.prototype),s.prototype.option=function(t){r.extend(this.options,t)},s.prototype._create=function(){this.reloadItems(),this.stamps=[],this.stamp(this.options.stamp),r.extend(this.element.style,this.options.containerStyle),this.options.isResizeBound&&this.bindResize()},s.prototype.reloadItems=function(){this.items=this._itemize(this.element.children)},s.prototype._itemize=function(t){for(var e=this._filterFindItemElements(t),n=this.constructor.Item,i=[],r=0,o=e.length;o>r;r++){var s=e[r],a=new n(s,this);i.push(a)}return i},s.prototype._filterFindItemElements=function(t){return r.filterFindElements(t,this.options.itemSelector)},s.prototype.getItemElements=function(){for(var t=[],e=0,n=this.items.length;n>e;e++)t.push(this.items[e].element);return t},s.prototype.layout=function(){this._resetLayout(),this._manageStamps();var t=void 0!==this.options.isLayoutInstant?this.options.isLayoutInstant:!this._isLayoutInited;this.layoutItems(this.items,t),this._isLayoutInited=!0},s.prototype._init=s.prototype.layout,s.prototype._resetLayout=function(){this.getSize()},s.prototype.getSize=function(){this.size=i(this.element)},s.prototype._getMeasurement=function(t,e){var n,o=this.options[t];o?("string"==typeof o?n=this.element.querySelector(o):r.isElement(o)&&(n=o),this[t]=n?i(n)[e]:o):this[t]=0},s.prototype.layoutItems=function(t,e){t=this._getItemsForLayout(t),this._layoutItems(t,e),this._postLayout()},s.prototype._getItemsForLayout=function(t){for(var e=[],n=0,i=t.length;i>n;n++){var r=t[n];r.isIgnored||e.push(r)}return e},s.prototype._layoutItems=function(t,e){if(this._emitCompleteOnItems("layout",t),t&&t.length){for(var n=[],i=0,r=t.length;r>i;i++){var o=t[i],s=this._getItemLayoutPosition(o);s.item=o,s.isInstant=e||o.isLayoutInstant,n.push(s)}this._processLayoutQueue(n)}},s.prototype._getItemLayoutPosition=function(){return{x:0,y:0}},s.prototype._processLayoutQueue=function(t){for(var e=0,n=t.length;n>e;e++){var i=t[e];this._positionItem(i.item,i.x,i.y,i.isInstant)}},s.prototype._positionItem=function(t,e,n,i){i?t.goTo(e,n):t.moveTo(e,n)},s.prototype._postLayout=function(){this.resizeContainer()},s.prototype.resizeContainer=function(){if(this.options.isResizingContainer){var t=this._getContainerSize();t&&(this._setContainerMeasure(t.width,!0),this._setContainerMeasure(t.height,!1))}},s.prototype._getContainerSize=u,s.prototype._setContainerMeasure=function(t,e){if(void 0!==t){var n=this.size;n.isBorderBox&&(t+=e?n.paddingLeft+n.paddingRight+n.borderLeftWidth+n.borderRightWidth:n.paddingBottom+n.paddingTop+n.borderTopWidth+n.borderBottomWidth),t=Math.max(t,0),this.element.style[e?"width":"height"]=t+"px"}},s.prototype._emitCompleteOnItems=function(t,e){function n(){r.dispatchEvent(t+"Complete",null,[e])}function i(){s++,s===o&&n()}var r=this,o=e.length;if(!e||!o)return void n();for(var s=0,a=0,l=e.length;l>a;a++){var u=e[a];u.once(t,i)}},s.prototype.dispatchEvent=function(t,e,n){var i=e?[e].concat(n):n;if(this.emitEvent(t,i),l)if(this.$element=this.$element||l(this.element),e){var r=l.Event(e);r.type=t,this.$element.trigger(r,n)}else this.$element.trigger(t,n)},s.prototype.ignore=function(t){var e=this.getItem(t);e&&(e.isIgnored=!0)},s.prototype.unignore=function(t){var e=this.getItem(t);e&&delete e.isIgnored},s.prototype.stamp=function(t){if(t=this._find(t)){this.stamps=this.stamps.concat(t);for(var e=0,n=t.length;n>e;e++){var i=t[e];this.ignore(i)}}},s.prototype.unstamp=function(t){if(t=this._find(t))for(var e=0,n=t.length;n>e;e++){var i=t[e];r.removeFrom(this.stamps,i),this.unignore(i)}},s.prototype._find=function(t){return t?("string"==typeof t&&(t=this.element.querySelectorAll(t)),t=r.makeArray(t)):void 0},s.prototype._manageStamps=function(){if(this.stamps&&this.stamps.length){this._getBoundingRect();for(var t=0,e=this.stamps.length;e>t;t++){var n=this.stamps[t];this._manageStamp(n)}}},s.prototype._getBoundingRect=function(){var t=this.element.getBoundingClientRect(),e=this.size;this._boundingRect={left:t.left+e.paddingLeft+e.borderLeftWidth,top:t.top+e.paddingTop+e.borderTopWidth,right:t.right-(e.paddingRight+e.borderRightWidth),bottom:t.bottom-(e.paddingBottom+e.borderBottomWidth)}},s.prototype._manageStamp=u,s.prototype._getElementOffset=function(t){var e=t.getBoundingClientRect(),n=this._boundingRect,r=i(t),o={left:e.left-n.left-r.marginLeft,top:e.top-n.top-r.marginTop,right:n.right-e.right-r.marginRight,bottom:n.bottom-e.bottom-r.marginBottom};return o},s.prototype.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},s.prototype.bindResize=function(){this.isResizeBound||(e.bind(t,"resize",this),this.isResizeBound=!0)},s.prototype.unbindResize=function(){this.isResizeBound&&e.unbind(t,"resize",this),this.isResizeBound=!1},s.prototype.onresize=function(){function t(){e.resize(),delete e.resizeTimeout}this.resizeTimeout&&clearTimeout(this.resizeTimeout);var e=this;this.resizeTimeout=setTimeout(t,100)},s.prototype.resize=function(){this.isResizeBound&&this.needsResizeLayout()&&this.layout()},s.prototype.needsResizeLayout=function(){var t=i(this.element),e=this.size&&t;return e&&t.innerWidth!==this.size.innerWidth},s.prototype.addItems=function(t){var e=this._itemize(t);return e.length&&(this.items=this.items.concat(e)),e},s.prototype.appended=function(t){var e=this.addItems(t);e.length&&(this.layoutItems(e,!0),this.reveal(e))},s.prototype.prepended=function(t){var e=this._itemize(t);if(e.length){var n=this.items.slice(0);this.items=e.concat(n),this._resetLayout(),this._manageStamps(),this.layoutItems(e,!0),this.reveal(e),this.layoutItems(n)}},s.prototype.reveal=function(t){this._emitCompleteOnItems("reveal",t);for(var e=t&&t.length,n=0;e&&e>n;n++){var i=t[n];i.reveal()}},s.prototype.hide=function(t){this._emitCompleteOnItems("hide",t);for(var e=t&&t.length,n=0;e&&e>n;n++){var i=t[n];i.hide()}},s.prototype.revealItemElements=function(t){var e=this.getItems(t);this.reveal(e)},s.prototype.hideItemElements=function(t){var e=this.getItems(t);this.hide(e)},s.prototype.getItem=function(t){for(var e=0,n=this.items.length;n>e;e++){var i=this.items[e];if(i.element===t)return i}},s.prototype.getItems=function(t){t=r.makeArray(t);for(var e=[],n=0,i=t.length;i>n;n++){var o=t[n],s=this.getItem(o);s&&e.push(s)}return e},s.prototype.remove=function(t){var e=this.getItems(t);if(this._emitCompleteOnItems("remove",e),e&&e.length)for(var n=0,i=e.length;i>n;n++){var o=e[n];o.remove(),r.removeFrom(this.items,o)}},s.prototype.destroy=function(){var t=this.element.style;t.height="",t.position="",t.width="";for(var e=0,n=this.items.length;n>e;e++){var i=this.items[e];i.destroy()}this.unbindResize();var r=this.element.outlayerGUID;delete f[r],delete this.element.outlayerGUID,l&&l.removeData(this.element,this.constructor.namespace)},s.data=function(t){t=r.getQueryElement(t);var e=t&&t.outlayerGUID;return e&&f[e]},s.create=function(t,e){function n(){s.apply(this,arguments)}return Object.create?n.prototype=Object.create(s.prototype):r.extend(n.prototype,s.prototype),n.prototype.constructor=n,n.defaults=r.extend({},s.defaults),r.extend(n.defaults,e),n.prototype.settings={},n.namespace=t,n.data=s.data,n.Item=function(){o.apply(this,arguments)},n.Item.prototype=new o,r.htmlInit(n,t),l&&l.bridget&&l.bridget(t,n),n},s.Item=o,s}),function(t,e){"function"==typeof define&&define.amd?define(["outlayer/outlayer","get-size/get-size","fizzy-ui-utils/utils"],e):"object"==typeof exports?module.exports=e(require("outlayer"),require("get-size"),require("fizzy-ui-utils")):t.Masonry=e(t.Outlayer,t.getSize,t.fizzyUIUtils)}(window,function(t,e,n){var i=t.create("masonry");return i.prototype._resetLayout=function(){this.getSize(),this._getMeasurement("columnWidth","outerWidth"),this._getMeasurement("gutter","outerWidth"),this.measureColumns();var t=this.cols;for(this.colYs=[];t--;)this.colYs.push(0);this.maxY=0},i.prototype.measureColumns=function(){if(this.getContainerWidth(),!this.columnWidth){var t=this.items[0],n=t&&t.element;this.columnWidth=n&&e(n).outerWidth||this.containerWidth}var i=this.columnWidth+=this.gutter,r=this.containerWidth+this.gutter,o=r/i,s=i-r%i,a=s&&1>s?"round":"floor";o=Math[a](o),this.cols=Math.max(o,1)},i.prototype.getContainerWidth=function(){var t=this.options.isFitWidth?this.element.parentNode:this.element,n=e(t);this.containerWidth=n&&n.innerWidth},i.prototype._getItemLayoutPosition=function(t){t.getSize();var e=t.size.outerWidth%this.columnWidth,i=e&&1>e?"round":"ceil",r=Math[i](t.size.outerWidth/this.columnWidth);r=Math.min(r,this.cols);for(var o=this._getColGroup(r),s=Math.min.apply(Math,o),a=n.indexOf(o,s),l={x:this.columnWidth*a,y:s},u=s+t.size.outerHeight,c=this.cols+1-o.length,f=0;c>f;f++)this.colYs[a+f]=u;return l},i.prototype._getColGroup=function(t){if(2>t)return this.colYs;for(var e=[],n=this.cols+1-t,i=0;n>i;i++){var r=this.colYs.slice(i,i+t);e[i]=Math.max.apply(Math,r)}return e},i.prototype._manageStamp=function(t){var n=e(t),i=this._getElementOffset(t),r=this.options.isOriginLeft?i.left:i.right,o=r+n.outerWidth,s=Math.floor(r/this.columnWidth);s=Math.max(0,s);var a=Math.floor(o/this.columnWidth);a-=o%this.columnWidth?0:1,a=Math.min(this.cols-1,a);for(var l=(this.options.isOriginTop?i.top:i.bottom)+n.outerHeight,u=s;a>=u;u++)this.colYs[u]=Math.max(l,this.colYs[u])},i.prototype._getContainerSize=function(){this.maxY=Math.max.apply(Math,this.colYs);var t={height:this.maxY};return this.options.isFitWidth&&(t.width=this._getContainerFitWidth()),t},i.prototype._getContainerFitWidth=function(){for(var t=0,e=this.cols;--e&&0===this.colYs[e];)t++;return(this.cols-t)*this.columnWidth-this.gutter},i.prototype.needsResizeLayout=function(){var t=this.containerWidth;return this.getContainerWidth(),t!==this.containerWidth},i}),function(){var t={};this.tmpl=function e(n,i){var r=/\W/.test(n)?new Function("obj","var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('"+n.replace(/[\r\t\n]/g," ").split("<%").join("	").replace(/((^|%>)[^\t]*)'/g,"$1\r").replace(/\t=(.*?)%>/g,"',$1,'").split("	").join("');").split("%>").join("p.push('").split("\r").join("\\'")+"');}return p.join('');"):t[n]=t[n]||e(document.getElementById(n).innerHTML);return i?r(i):r}}(),$(function(){var t=!1,e=function(t){var e="2656466-4e611d876bc99286937427964",i="http://pixabay.com/api/?key="+e+"&response_group=image_details&per_page=10&q="+encodeURIComponent(t),r="onload"in new XMLHttpRequest?XMLHttpRequest:XDomainRequest,o=new r;o.open("GET",i,!0),o.onload=function(){parseInt(JSON.parse(this.responseText).totalHits)>0?n(JSON.parse(this.responseText)):console.log("No hits")},o.onerror=function(){alert("Ошибка "+this.status)},o.send()},n=function(e){t===!0&&$(".activity__grid").masonry("destroy");var n=$("#activity__grid__template").html(),i=tmpl(n,{dataImg:e});$(".activity__grid").html(i),$(".activity__grid").masonry({itemSelector:".activity__grid__item",columnWidth:".activity__grid__sizer"}),t=!0},i=function(t){t.preventDefault();var n=o.val();0!==n.length&&e(n)},r=$(".activity__box__search__form__submit"),o=$(".activity__box__search__form__input");r.click(i);var s=localStorage.getItem("data");JSON.parse(s);$(".activity__grid").masonry({itemSelector:".activity__grid__item",columnWidth:".activity__grid__sizer"}),t=!0,e("")});
//# sourceMappingURL=data:application/json;base64,
